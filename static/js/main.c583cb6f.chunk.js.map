{"version":3,"sources":["state/actions/points/pointsReducers.js","state/actions/nameAndValuePoints/nameAndValuePointsReducer.js","state/rootReducer.js","state/types.js","store.js","views/components/Header.js","state/actions/points/pointsActions.js","views/components/dataInputs/XYDataInput.js","views/components/dataInputs/NameAndValueDataInput.js","state/actions/nameAndValuePoints/nameAndValuePointsActions.js","views/components/charts/PointsChart.js","views/components/charts/LinesChart.js","views/components/charts/HorizontalBarChart.js","views/components/charts/VerticalBarChart.js","views/pages/MainPage.js","Routes.js","App.js","index.js"],"names":["initialState","points","appReducer","combineReducers","XandYPoints","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","NameAndValueReducer","name","value","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Header","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","addPoint","dispatch","removePoint","editPoint","XYDataInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","newPoint","uuid","isNaN","errorMessage","xValues","values","$","scrollTop","scrollHeight","editMode","val","edit","data","_this2","csvData","map","key","includes","Fragment","defaultValue","onClick","editModeTurnOff","editModeTurnOn","colSpan","react_csv","filename","connect","NameAndValueDataInput","newRecord","newName","newValue","PointsChart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","cursor","Legend","Scatter","fill","LinesChart","LineChart","Line","stroke","HorizontalBarChart","BarChart","barSize","ReferenceLine","Bar","VerticalBarChart","layout","MainPage","NumbersChartType","TextChartType","family","components_dataInputs_XYDataInput","components_dataInputs_NameAndValueDataInput","xypoints","nvpoints","Routes","BrowserRouter","Header_Header","Switch","Route","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gUAEMA,EAAe,CACjBC,OAAQ,CACJA,OAAQ,KCFVD,EAAe,CACjBC,OAAQ,CACJA,OAAQ,KCCVC,EAAaC,YAAgB,CAC/BC,YFEW,WAAwC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBN,EAAcS,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACX,IGVoB,eHWhB,IAAIT,EAASI,EAAMJ,OAAOA,OAK1B,OAJAA,EAAOU,KAAKF,EAAOG,SACnBX,EAAOY,KAAK,SAASC,EAAEC,GACnB,OAAOD,EAAEE,EAAID,EAAEC,IAEZC,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EADP,CAEIJ,OAAQ,CACJA,OAAUA,KAGtB,IGrBuB,kBH0BnB,OAHAA,GADAA,EAASI,EAAMJ,OAAOA,QACNkB,OAAO,SAAAC,GACnB,OAAOA,EAAMC,KAAOZ,EAAOG,UAExBK,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EADP,CAEIJ,OAAQ,CACJA,OAAUA,KAGtB,IG/BqB,gBHuCjB,OAPAA,EAASI,EAAMJ,OAAOA,QACfqB,QAAQ,SAACF,EAAOC,GAChBD,EAAMC,KAAOZ,EAAOG,QAAQS,KAC3BD,EAAMJ,EAAIP,EAAOG,QAAQW,KACzBH,EAAMI,EAAIf,EAAOG,QAAQa,QAG1BR,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EADP,CAEIJ,OAAQ,CACJA,OAAUA,KAGtB,QACI,OAAOI,IEzCfqB,oBDCW,WAAwC,IAA9BrB,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBN,EAAcS,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACX,IEN8B,yBFO1B,IAAIT,EAASI,EAAMJ,OAAOA,OAK1B,OAJAA,EAAOU,KAAKF,EAAOG,SAIZK,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EADP,CAEIJ,OAAQ,CACJA,OAAUA,KAGtB,IEjBiC,4BFsB7B,OAHAA,GADAA,EAASI,EAAMJ,OAAOA,QACNkB,OAAO,SAAAC,GACnB,OAAOA,EAAMC,KAAOZ,EAAOG,UAExBK,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EADP,CAEIJ,OAAQ,CACJA,OAAUA,KAGtB,IE3B+B,yBFmC3B,OAPAA,EAASI,EAAMJ,OAAOA,QACfqB,QAAQ,SAACF,EAAOC,GAChBD,EAAMC,KAAOZ,EAAOG,QAAQS,KAC3BD,EAAMO,KAAOlB,EAAOG,QAAQW,KAC5BH,EAAMQ,MAAQnB,EAAOG,QAAQa,QAG9BR,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EADP,CAEIJ,OAAQ,CACJA,OAAUA,KAGtB,QACI,OAAOI,MClCJwB,EAJK,SAACxB,EAAOI,GACxB,OAAOP,EAAWG,EAAOI,IELvBqB,EAAa,CAACC,KAWLC,EATDC,YACZJ,EALmB,GAOnBK,YACEC,IAAeC,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,4DCX7BC,mLAEjB,OACEC,EAAA1B,EAAA2B,cAAA,WACED,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,+CACbF,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,aACbF,EAAA1B,EAAA2B,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,aAGAH,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,iBACVhC,KAAK,SACLkC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEXR,EAAA1B,EAAA2B,cAAA,QAAMC,UAAU,yBAElBF,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,2BAA2BrB,GAAG,aAC3CmB,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,0BArBQO,qBCAvBC,EAAW,SAAC9B,GAAD,OAAW,SAAA+B,GAC/BA,EAAS,CACLzC,KHJoB,eGKpBE,QAASQ,MAIJgC,EAAc,SAAC/B,GAAD,OAAQ,SAAA8B,GAC/BA,EAAS,CACLzC,KHVuB,kBGWvBE,QAASS,MAIJgC,EAAY,SAAChC,EAAGE,EAAKE,GAAT,OAAkB,SAAA0B,GACvCA,EAAS,CACLzC,KHhBqB,gBGiBrBE,QAAS,CACLS,KACAE,OACAE,8DCJN6B,sBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,KAAAJ,IACjBE,EAAAvC,OAAA0C,EAAA,EAAA1C,CAAAyC,KAAAzC,OAAA2C,EAAA,EAAA3C,CAAAqC,GAAAO,KAAAH,KAAMH,KAYRO,SAAW,SAAAC,GAAC,OAAIP,EAAKQ,SAAL/C,OAAAgD,EAAA,EAAAhD,CAAA,GAAiB8C,EAAEG,OAAOvC,KAAOoC,EAAEG,OAAOtC,SAbvC4B,EAenBN,SAAW,WACT,IAAMiB,EAAW,CACf9C,GAAI+C,MACJpD,EAAGwC,EAAKnD,MAAMkB,KACdC,EAAGgC,EAAKnD,MAAMoB,MAGhB,GAAmB,KAAf0C,EAASnD,GAA2B,KAAfmD,EAAS3C,EAAU,CAC1C,GAAI6C,MAAMF,EAASnD,GAIjB,YAHAwC,EAAKQ,SAAS,CACZM,aAAc,6CAKlB,GAAID,MAAMF,EAAS3C,GAIjB,YAHAgC,EAAKQ,SAAS,CACZM,aAAc,6CAKlB,IAAIC,EAAUtD,OAAOuD,OAAOhB,EAAKD,MAAMtD,OAAOA,QAAQkB,OAAO,SAAAC,GACzD,OAAOA,EAAMJ,IAAMmD,EAASnD,IAGhC,GAAGC,OAAOuD,OAAOD,GAAShE,OAAO,EAI/B,YAHAiD,EAAKQ,SAAS,CACZM,aAAc,+CAQlBd,EAAKD,MAAML,SAASiB,GACpBX,EAAKQ,SAAS,CACZM,aAAc,GACd/C,KAAM,GACNE,KAAM,KAGRgD,IAAE,YAAYC,UAAUD,IAAE,YAAY,GAAGE,mBAEzCnB,EAAKQ,SAAS,CACZM,aAAc,4DA1DlBd,EAAKnD,MAAQ,CACXJ,OAAQ,GACRsB,KAAM,GACNE,KAAM,GACN6C,aAAc,GACdM,SAAU,GACVlE,KAAM,YATS8C,2EAkEPnC,GACVqC,KAAKH,MAAMH,YAAY/B,0CAGVA,GACb,IAAIuD,EAAWlB,KAAKrD,MAAMuE,SAC1BA,EAASjE,KAAKU,GACdqC,KAAKM,SAAS,CACZY,SAAUA,4CAIEvD,GACd,IAAIE,EAAOkD,IAAE,MAAQpD,GAAIwD,MACrBpD,EAAOgD,IAAE,MAAQpD,GAAIwD,MAErBC,GAAO,EAEE,KAATvD,GAAwB,KAATE,IACjBiC,KAAKM,SAAS,CACZM,aACE,yGAEJQ,GAAO,IAELT,MAAM9C,IAAS8C,MAAM5C,MACvBiC,KAAKM,SAAS,CACZM,aACE,yGAEJQ,GAAO,GAGLA,GAAMpB,KAAKH,MAAMF,UAAUhC,EAAIE,EAAME,GAEzC,IAAImD,EAAWlB,KAAKrD,MAAMuE,SAE1BA,EAAWA,EAASzD,OAAO,SAAA4D,GACzB,OAAOA,IAAS1D,IAElBqC,KAAKM,SAAS,CACZY,SAAUA,qCAIL,IAAAI,EAAAtB,KAEDuB,EAAU,GAShB,OAPEvB,KAAKH,MAAMtD,OAAOA,OAAOqB,QAAQ,SAAAF,GAC7B6D,EAAQtE,KAAK,CACTK,EAAGI,EAAMJ,EACTQ,EAAGJ,EAAMI,MAKjBgB,EAAA1B,EAAA2B,cAAA,WACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,wBAEFD,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,OAAOrB,GAAG,WACvBmB,EAAA1B,EAAA2B,cAAA,SAAOC,UAAU,SACfF,EAAA1B,EAAA2B,cAAA,aACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAAd,KACAF,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAAd,KACAF,EAAA1B,EAAA2B,cAAA,qBAGJD,EAAA1B,EAAA2B,cAAA,aACGxB,OAAOuD,OAAOd,KAAKH,MAAMtD,OAAOA,QAAQiF,IAAI,SAAA9D,GAAK,OAChDoB,EAAA1B,EAAA2B,cAAA,MAAI0C,IAAKf,QACLY,EAAK3E,MAAMuE,SAASQ,SAAShE,EAAMC,KACnCmB,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAActB,EAAMJ,GAClCwB,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAActB,EAAMI,IAGrCwD,EAAK3E,MAAMuE,SAASQ,SAAShE,EAAMC,KAClCmB,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cACZF,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,4BACV4C,aAAclE,EAAMJ,EACpBK,GAAI,KAAOD,EAAMC,MAGrBmB,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cACZF,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,4BACV4C,aAAclE,EAAMI,EACpBH,GAAI,KAAOD,EAAMC,OAKzBmB,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,gBACXsC,EAAK3E,MAAMuE,SAASQ,SAAShE,EAAMC,IAClCmB,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,6CACV6C,QAAS,WACPP,EAAKQ,gBAAgBpE,EAAMC,MAH/B,UASAmB,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,6CACV6C,QAAS,WACPP,EAAKS,eAAerE,EAAMC,MAH9B,UASFmB,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,4CACV6C,QAAS,WACPP,EAAK5B,YAAYhC,EAAMC,MAH3B,oBAcZmB,EAAA1B,EAAA2B,cAAA,SAAOC,UAAU,SACfF,EAAA1B,EAAA2B,cAAA,aACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,WACAD,EAAA1B,EAAA2B,cAAA,aAGJD,EAAA1B,EAAA2B,cAAA,aACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,uCACVf,KAAK,OACLN,GAAG,OACHO,MAAO8B,KAAKrD,MAAMkB,KAClBuC,SAAUJ,KAAKI,YAGnBtB,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,uCACVf,KAAK,OACLN,GAAG,OACHO,MAAO8B,KAAKrD,MAAMoB,KAClBqC,SAAUJ,KAAKI,aAIrBtB,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,MAAIiD,QAAQ,KACVlD,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,mCACV6C,QAAS7B,KAAKR,UAFhB,WAQNV,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,MAAIiD,QAAQ,KACRlD,EAAA1B,EAAA2B,cAACkD,EAAA,QAAD,CAASZ,KAAME,EAASvC,UAAU,kBAAkBkD,SAAU,YAA9D,kCAKRpD,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,eAAd,IAA8BgB,KAAKrD,MAAMiE,aAAzC,aAnPkBrB,cA6PX4C,cAJS,SAAAxF,GAAK,MAAK,CAC9BJ,OAAQI,EAAMD,YAAYH,SAK5B,CACEiD,WACAE,cACAC,aALWwC,CAObvC,GCpQIwC,sBACJ,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,KAAAoC,IACjBtC,EAAAvC,OAAA0C,EAAA,EAAA1C,CAAAyC,KAAAzC,OAAA2C,EAAA,EAAA3C,CAAA6E,GAAAjC,KAAAH,KAAMH,KAYRO,SAAW,SAAAC,GAAC,OAAIP,EAAKQ,SAAL/C,OAAAgD,EAAA,EAAAhD,CAAA,GAAiB8C,EAAEG,OAAOvC,KAAOoC,EAAEG,OAAOtC,SAbvC4B,EAenBN,SAAW,WACT,IAAM6C,EAAY,CAChB1E,GAAI+C,MACFzC,KAAM6B,EAAKnD,MAAM2F,QACjBpE,MAAO4B,EAAKnD,MAAM4F,UAGtB,GAAuB,KAAnBF,EAAUpE,MAAmC,KAApBoE,EAAUnE,MAAc,CACnD,GAAIyC,MAAM0B,EAAUnE,OAIlB,YAHA4B,EAAKQ,SAAS,CACZM,aAAc,6CAKJrD,OAAOuD,OAAOhB,EAAKD,MAAMtD,OAAOA,QAAQkB,OAAO,SAAAC,GACzD,OAAOA,EAAMJ,IAAM+E,EAAU/E,IAIjCwC,EAAKD,MAAML,SAAS6C,GACpBvC,EAAKQ,SAAS,CACZM,aAAc,GACd0B,QAAS,GACTC,SAAU,KAGZxB,IAAE,YAAYC,UAAUD,IAAE,YAAY,GAAGE,mBAEzCnB,EAAKQ,SAAS,CACZM,aAAc,4DA1ClBd,EAAKnD,MAAQ,CACXJ,OAAQ,GACR+F,QAAS,GACTC,SAAU,GACV3B,aAAc,GACdM,SAAU,GACVlE,KAAM,YATS8C,2EAkDPnC,GACVqC,KAAKH,MAAMH,YAAY/B,0CAGVA,GACb,IAAIuD,EAAWlB,KAAKrD,MAAMuE,SAC1BA,EAASjE,KAAKU,GACdqC,KAAKM,SAAS,CACZY,SAAUA,4CAIEvD,GACd,IAAI2E,EAAUvB,IAAE,MAAQpD,GAAIwD,MACxBoB,EAAWxB,IAAE,MAAQpD,GAAIwD,MAEzBC,GAAO,EAEK,KAAZkB,GAA+B,KAAbC,IACpBvC,KAAKM,SAAS,CACZM,aACE,yGAEJQ,GAAO,GAELT,MAAM4B,KACRvC,KAAKM,SAAS,CACZM,aACE,4GAEJQ,GAAO,GAGLA,GAAMpB,KAAKH,MAAMF,UAAUhC,EAAI2E,EAASC,GAE5C,IAAIrB,EAAWlB,KAAKrD,MAAMuE,SAE1BA,EAAWA,EAASzD,OAAO,SAAA4D,GACzB,OAAOA,IAAS1D,IAElBqC,KAAKM,SAAS,CACZY,SAAUA,qCAIL,IAAAI,EAAAtB,KACDuB,EAAU,GAShB,OAPEvB,KAAKH,MAAMtD,OAAOA,OAAOqB,QAAQ,SAAAF,GAC7B6D,EAAQtE,KAAK,CACTK,EAAGI,EAAMJ,EACTQ,EAAGJ,EAAMI,MAKjBgB,EAAA1B,EAAA2B,cAAA,WACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,wBAEFD,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,OAAOrB,GAAG,WACvBmB,EAAA1B,EAAA2B,cAAA,SAAOC,UAAU,SACfF,EAAA1B,EAAA2B,cAAA,aACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAAd,SACAF,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAAd,qBACAF,EAAA1B,EAAA2B,cAAA,qBAGJD,EAAA1B,EAAA2B,cAAA,aACGxB,OAAOuD,OAAOd,KAAKH,MAAMtD,OAAOA,QAAQiF,IAAI,SAAA9D,GAAK,OAChDoB,EAAA1B,EAAA2B,cAAA,MAAI0C,IAAKf,QACLY,EAAK3E,MAAMuE,SAASQ,SAAShE,EAAMC,KACnCmB,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAActB,EAAMO,MAClCa,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cAActB,EAAMQ,QAGrCoD,EAAK3E,MAAMuE,SAASQ,SAAShE,EAAMC,KAClCmB,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cACZF,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,4BACV4C,aAAclE,EAAMO,KACpBN,GAAI,KAAOD,EAAMC,MAGrBmB,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,cACZF,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,4BACV4C,aAAclE,EAAMQ,MACpBP,GAAI,KAAOD,EAAMC,OAKzBmB,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,gBACXsC,EAAK3E,MAAMuE,SAASQ,SAAShE,EAAMC,IAClCmB,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,6CACV6C,QAAS,WACPP,EAAKQ,gBAAgBpE,EAAMC,MAH/B,UASAmB,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,6CACV6C,QAAS,WACPP,EAAKS,eAAerE,EAAMC,MAH9B,UASFmB,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,4CACV6C,QAAS,WACPP,EAAK5B,YAAYhC,EAAMC,MAH3B,oBAcZmB,EAAA1B,EAAA2B,cAAA,SAAOC,UAAU,SACfF,EAAA1B,EAAA2B,cAAA,aACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,WACAD,EAAA1B,EAAA2B,cAAA,aAGJD,EAAA1B,EAAA2B,cAAA,aACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,uCACVf,KAAK,UACLN,GAAG,UACHO,MAAO8B,KAAKrD,MAAM2F,QAClBlC,SAAUJ,KAAKI,YAGnBtB,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,SACEC,UAAU,uCACVf,KAAK,WACLN,GAAG,WACHO,MAAO8B,KAAKrD,MAAM4F,SAClBnC,SAAUJ,KAAKI,aAIrBtB,EAAA1B,EAAA2B,cAAA,UACED,EAAA1B,EAAA2B,cAAA,MAAIiD,QAAQ,KACVlD,EAAA1B,EAAA2B,cAAA,UACEC,UAAU,mCACV6C,QAAS7B,KAAKR,UAFhB,WAQJV,EAAA1B,EAAA2B,cAAA,UACID,EAAA1B,EAAA2B,cAAA,MAAIiD,QAAQ,KACRlD,EAAA1B,EAAA2B,cAACkD,EAAA,QAAD,CAASZ,KAAME,EAASvC,UAAU,kBAAkBkD,SAAU,YAA9D,kCAKZpD,EAAA1B,EAAA2B,cAAA,MAAIC,UAAU,eAAd,IAA8BgB,KAAKrD,MAAMiE,aAAzC,aAlO4BrB,cA4OrB4C,cAJS,SAAAxF,GAAK,MAAK,CAChCJ,OAAQI,EAAMqB,oBAAoBzB,SAKlC,CACEiD,SC/PoB,SAAC9B,GAAD,OAAW,SAAA+B,GAC/BA,EAAS,CACLzC,KNA8B,yBMC9BE,QAASQ,MD6PbgC,YCzPuB,SAAC/B,GAAD,OAAQ,SAAA8B,GAC/BA,EAAS,CACLzC,KNNiC,4BMOjCE,QAASS,MDuPbgC,UCnPqB,SAAChC,EAAGE,EAAKE,GAAT,OAAkB,SAAA0B,GACvCA,EAAS,CACLzC,KNZ+B,yBMa/BE,QAAS,CACLS,KACAE,OACAE,aDwOGoE,CAObC,gEEvPa,SAASI,EAAY3C,GAElC,OACEf,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAAC0D,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KAEhDlE,EAAA1B,EAAA2B,cAACkE,EAAA,EAAD,CAAeC,gBAAgB,QAC/BpE,EAAA1B,EAAA2B,cAACoE,EAAA,EAAD,CAAOnG,KAAK,SAASoG,QAAQ,IAAInF,KAAK,MACtCa,EAAA1B,EAAA2B,cAACsE,EAAA,EAAD,CAAOrG,KAAK,SAASoG,QAAQ,IAAInF,KAAK,MAEtCa,EAAA1B,EAAA2B,cAACuE,EAAA,EAAD,CAASC,OAAQ,CAAEL,gBAAiB,SACpCpE,EAAA1B,EAAA2B,cAACyE,EAAA,EAAD,MACA1E,EAAA1B,EAAA2B,cAAC0E,EAAA,EAAD,CAASxF,KAAK,OAAOoD,KAAMxB,EAAMtD,OAAOA,OAAQmH,KAAK,oCCf9C,SAASC,EAAW9D,GACjC,IAAIwB,EAAO,GASX,OAPAxB,EAAMtD,OAAOA,OAAOqB,QAAQ,SAAAF,GAC1B2D,EAAKpE,KAAK,CACRK,EAAGI,EAAMJ,EACTQ,EAAGJ,EAAMI,MAKXgB,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAAC6E,EAAA,EAAD,CACElB,MAAO,IACPC,OAAQ,IACRtB,KAAMA,EACNuB,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIE,KAAM,GAAID,OAAQ,KAEhDjE,EAAA1B,EAAA2B,cAACkE,EAAA,EAAD,CAAeC,gBAAgB,QAC/BpE,EAAA1B,EAAA2B,cAACoE,EAAA,EAAD,CAAOC,QAAQ,IAAIpG,KAAK,WACxB8B,EAAA1B,EAAA2B,cAACsE,EAAA,EAAD,MACAvE,EAAA1B,EAAA2B,cAACuE,EAAA,EAAD,MACAxE,EAAA1B,EAAA2B,cAACyE,EAAA,EAAD,MACA1E,EAAA1B,EAAA2B,cAAC8E,EAAA,EAAD,CAAM7G,KAAK,WAAWoG,QAAQ,IAAIU,OAAO,6CCpBlC,SAASC,EAAmBlE,GAEvC,IAAIwB,EAAO,GASX,OAPAxB,EAAMtD,OAAOA,OAAOqB,QAAQ,SAAAF,GACxB2D,EAAKpE,KAAK,CACNgB,KAAMP,EAAMO,KACZC,MAAOR,EAAMQ,UAKjBY,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACI7C,EAAA1B,EAAA2B,cAACiF,EAAA,EAAD,CACItB,MAAO,IACPC,OAAQ,IACRtB,KAAMA,EACNuB,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,GAC9CkB,QAAS,IACTnF,EAAA1B,EAAA2B,cAACkE,EAAA,EAAD,CAAeC,gBAAgB,QAC/BpE,EAAA1B,EAAA2B,cAACoE,EAAA,EAAD,CAAOC,QAAQ,SACftE,EAAA1B,EAAA2B,cAACsE,EAAA,EAAD,MACAvE,EAAA1B,EAAA2B,cAACuE,EAAA,EAAD,MACAxE,EAAA1B,EAAA2B,cAACyE,EAAA,EAAD,MACA1E,EAAA1B,EAAA2B,cAACmF,EAAA,EAAD,CAAepG,EAAG,EAAGgG,OAAO,SAC5BhF,EAAA1B,EAAA2B,cAACoF,EAAA,EAAD,CAAKf,QAAQ,QAAQnF,KAAK,OAAOyF,KAAK,cCzBvC,SAASU,GAAiBvE,GAErC,IAAIwB,EAAO,GASX,OAPAxB,EAAMtD,OAAOA,OAAOqB,QAAQ,SAAAF,GACxB2D,EAAKpE,KAAK,CACNgB,KAAMP,EAAMO,KACZC,MAAOR,EAAMQ,UAKjBY,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACI7C,EAAA1B,EAAA2B,cAACiF,EAAA,EAAD,CACItB,MAAO,IACPC,OAAQ,IACRtB,KAAMA,EACNuB,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,GAC9CsB,OAAO,WACPJ,QAAS,IACTnF,EAAA1B,EAAA2B,cAACkE,EAAA,EAAD,CAAeC,gBAAgB,QAC/BpE,EAAA1B,EAAA2B,cAACoE,EAAA,EAAD,CAAOnG,KAAK,WACZ8B,EAAA1B,EAAA2B,cAACsE,EAAA,EAAD,CAAOD,QAAQ,OAAOpG,KAAK,aAC3B8B,EAAA1B,EAAA2B,cAACuE,EAAA,EAAD,MACAxE,EAAA1B,EAAA2B,cAACyE,EAAA,EAAD,MACA1E,EAAA1B,EAAA2B,cAACmF,EAAA,EAAD,CAAepG,EAAG,EAAGgG,OAAO,SAC5BhF,EAAA1B,EAAA2B,cAACoF,EAAA,EAAD,CAAKf,QAAQ,QAAQnF,KAAK,OAAOyF,KAAK,kBCvBhDY,eACF,SAAAA,EAAYzE,GAAO,IAAAC,EAAA,OAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,KAAAsE,IACfxE,EAAAvC,OAAA0C,EAAA,EAAA1C,CAAAyC,KAAAzC,OAAA2C,EAAA,EAAA3C,CAAA+G,GAAAnE,KAAAH,KAAMH,KAEDlD,MAAQ,CACTD,YAAa,GACb6H,iBAAkB,WAClBC,cAAe,wBACfC,OAAQ,YAPG3E,qHAcV,IAAAwB,EAAAtB,KACL,OACIlB,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,aACXF,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,YACXF,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,oBACXF,EAAA1B,EAAA2B,cAAA,2CACAD,EAAA1B,EAAA2B,cAAA,UACIC,UAAU,oBACV6C,QAAS,WACLP,EAAKhB,SAAS,CACVmE,OAAQ,eAJpB,YASA3F,EAAA1B,EAAA2B,cAAA,UACIC,UAAU,oBACV6C,QAAS,WACLP,EAAKhB,SAAS,CACVmE,OAAQ,eAJpB,cAWR3F,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,OACY,aAAtBgB,KAAKrD,MAAM8H,QACZ3F,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,YACXF,EAAA1B,EAAA2B,cAAC2F,EAAD,OAGmB,aAAtB1E,KAAKrD,MAAM8H,QACZ3F,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,YACXF,EAAA1B,EAAA2B,cAAC4F,EAAD,OAIJ7F,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,YACXF,EAAA1B,EAAA2B,cAAA,UACID,EAAA1B,EAAA2B,cAAA,0BAEmB,aAAtBiB,KAAKrD,MAAM8H,QACZ3F,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KAEwC,aAAhC3B,KAAKrD,MAAM4H,kBACPzF,EAAA1B,EAAA2B,cAACyD,EAAD,CAAajG,OAAQyD,KAAKH,MAAM+E,WAGP,YAAhC5E,KAAKrD,MAAM4H,kBACJzF,EAAA1B,EAAA2B,cAAC4E,EAAD,CAAYpH,OAAQyD,KAAKH,MAAM+E,WAGvC9F,EAAA1B,EAAA2B,cAAA,UACIC,UAAU,oBACV6C,QAAS,WACLP,EAAKhB,SAAS,CACViE,iBAAkB,eAJ9B,YAUAzF,EAAA1B,EAAA2B,cAAA,UACIC,UAAU,oBACV6C,QAAS,WACLP,EAAKhB,SAAS,CACViE,iBAAkB,cAJ9B,YAamB,aAAtBvE,KAAKrD,MAAM8H,QACZ3F,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KAEqC,0BAA7B3B,KAAKrD,MAAM6H,eACP1F,EAAA1B,EAAA2B,cAACgF,EAAD,CAAoBxH,OAAQyD,KAAKH,MAAMgF,WAId,wBAA7B7E,KAAKrD,MAAM6H,eACP1F,EAAA1B,EAAA2B,cAACqF,GAAD,CAAkB7H,OAAQyD,KAAKH,MAAMgF,WAG7C/F,EAAA1B,EAAA2B,cAAA,UACIC,UAAU,oBACV6C,QAAS,WACLP,EAAKhB,SAAS,CACVkE,cAAe,4BAJ3B,0BAUA1F,EAAA1B,EAAA2B,cAAA,UACIC,UAAU,oBACV6C,QAAS,WACLP,EAAKhB,SAAS,CACVkE,cAAe,0BAJ3B,mCAjHLjF,aA2IR4C,eANS,SAAAxF,GAAK,MAAK,CAC9BiI,SAAUjI,EAAMD,YAAYH,OAC5BsI,SAAUlI,EAAMqB,oBAAoBzB,SAMpC,CACIiD,WACAE,cACAC,aALOwC,CAObmC,IChKmBQ,oLAIjB,OACEhG,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,UACbF,EAAA1B,EAAA2B,cAACD,EAAA1B,EAAMuE,SAAP,KACE7C,EAAA1B,EAAA2B,cAACgG,EAAA,EAAD,KACEjG,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,OACbF,EAAA1B,EAAA2B,cAACiG,EAAD,MACAlG,EAAA1B,EAAA2B,cAACkG,EAAA,EAAD,KACEnG,EAAA1B,EAAA2B,cAACmG,EAAA,EAAD,CAAOC,UAAWb,iBAXE/E,aCerB6F,oLAVX,OACEtG,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,OACbF,EAAA1B,EAAA2B,cAACsG,EAAA,EAAD,CAAU/G,MAAOA,GACfQ,EAAA1B,EAAA2B,cAACuG,GAAD,eALQ/F,aCJlBgG,IAASC,OAAO1G,EAAA1B,EAAA2B,cAAC0G,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.c583cb6f.chunk.js","sourcesContent":["import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function(a,b) {\n                return a.x - b.x;\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if(point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        default:\n            return state;\n    }\n}","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_NAMEANDVALUE_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            // points.sort(function(a,b) {\n            //     return a.x - b.x;\n            // })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        case REMOVE_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        case EDIT_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if(point.id === action.payload.id) {\n                    point.name = action.payload.newX;\n                    point.value = action.payload.newY;\n                }\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport XandYPointsReducer from \"./actions/points/pointsReducers\";\nimport NameAndValueReducer from \"./actions/nameAndValuePoints/nameAndValuePointsReducer\";\n\nconst appReducer = combineReducers({\n    XandYPoints: XandYPointsReducer,\n    NameAndValueReducer: NameAndValueReducer\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_XY_POINT = 'ADD_XY_POINT';\nexport const REMOVE_XY_POINT = 'REMOVE_XY_POINT';\nexport const EDIT_XY_POINT = 'EDIT_XY_POINT';\n\nexport const ADD_NAMEANDVALUE_POINT = 'ADD_NAMEANDVALUE_POINT';\nexport const REMOVE_NAMEANDVALUE_POINT = 'REMOVE_NAMEANDVALUE_POINT';\nexport const EDIT_NAMEANDVALUE_POINT = 'EDIT_NAMEANDVALUE_OINT';\n\nexport const ADD_PAIR = 'ADD_PAIR';\nexport const REMOVE_PAIR = 'REMOVE_PAIR';\nexport const EDIT_PAIR = 'EDIT_PAIR';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <div className=\"container\">\n            <a className=\"navbar-brand\" href=\"/\">\n              ChartsApp\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNav\"\n              aria-controls=\"navbarNav\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n              {/* <li class=\"nav-item dropdown\">\n                    <a class=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Plik\n                    </a>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a class=\"dropdown-item\" href=\"#\">Nowy</a>\n                    <a class=\"dropdown-item\" href=\"#\"></a>\n                    <a class=\"dropdown-item\" href=\"#\"></a>\n                    </div>\n                </li> */}\n                {/* <li class=\"nav-item active\">\n                  <a class=\"nav-link\" href=\"#\">\n                    Wykresy danych liczbowych\n                  </a>\n                </li>\n                <li class=\"nav-item active\">\n                  <a class=\"nav-link\" href=\"#\">\n                    Wykresy danych tekstowych\n                  </a>\n                </li> */}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_XY_POINT,\n        payload: point\n    })\n}\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_XY_POINT,\n        payload: id\n    })\n}\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_XY_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n}","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newX: \"\",\n      newY: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newPoint = {\n      id: uuid(),\n      x: this.state.newX,\n      y: this.state.newY\n    };\n\n    if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n      if (isNaN(newPoint.x)) {\n        this.setState({\n          errorMessage: \"Wartość X nie jest liczbą\"\n        });\n        return;\n      }\n\n      if (isNaN(newPoint.y)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newPoint.x;\n      })\n\n      if(Object.values(xValues).length>0) {\n        this.setState({\n          errorMessage: \"Taka wartość X już istnieje\"\n        });\n        return;\n      }\n\n\n\n\n      this.props.addPoint(newPoint);\n      this.setState({\n        errorMessage: \"\",\n        newX: \"\",\n        newY: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newX = $(\"#x_\" + id).val();\n    let newY = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newX === \"\" || newY === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newX) || isNaN(newY)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newX, newY);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n\n      let csvData = [];\n\n      this.props.points.points.forEach(point => {\n          csvData.push({\n              x: point.x,\n              y: point.y\n          });\n      });\n\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">X</th>\n                <th className=\"valueWidth\">Y</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.x}</td>\n                      <td className=\"valueWidth\">{point.y}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.x}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.y}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newX\"\n                  id=\"newX\"\n                  value={this.state.newX}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newY\"\n                  id=\"newY\"\n                  value={this.state.newY}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          <tr>\n            <td colSpan=\"3\">\n                <CSVLink data={csvData} className=\"btn btn-primary\" filename={\"data.csv\"}>Pobierz dane jako plik CSV</CSVLink>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(XYDataInput);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newName: \"\",\n      newValue: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newRecord = {\n      id: uuid(),\n        name: this.state.newName,\n        value: this.state.newValue\n    };\n\n    if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n      if (isNaN(newRecord.value)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newRecord.x;\n      })\n\n\n      this.props.addPoint(newRecord);\n      this.setState({\n        errorMessage: \"\",\n        newName: \"\",\n        newValue: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newName = $(\"#x_\" + id).val();\n    let newValue = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newName === \"\" || newValue === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newValue)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newName, newValue);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n      let csvData = [];\n\n      this.props.points.points.forEach(point => {\n          csvData.push({\n              x: point.x,\n              y: point.y\n          });\n      });\n\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">Nazwa</th>\n                <th className=\"valueWidth\">Wartość</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.name}</td>\n                      <td className=\"valueWidth\">{point.value}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.name}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.value}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newName\"\n                  id=\"newName\"\n                  value={this.state.newName}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newValue\"\n                  id=\"newValue\"\n                  value={this.state.newValue}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n            <tr>\n                <td colSpan=\"3\">\n                    <CSVLink data={csvData} className=\"btn btn-primary\" filename={\"data.csv\"}>Pobierz dane jako plik CSV</CSVLink>\n                </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  points: state.NameAndValueReducer.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(NameAndValueDataInput);\n","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT} from \"../../types\";\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_NAMEANDVALUE_POINT,\n        payload: point\n    })\n}\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_NAMEANDVALUE_POINT,\n        payload: id\n    })\n}\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_NAMEANDVALUE_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n}","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function PointsChart(props) {\n\n  return (\n    <React.Fragment>\n      <ScatterChart\n        width={760}\n        height={500}\n        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"x\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"y\" />\n\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n        <Legend />\n        <Scatter name=\"Dane\" data={props.points.points} fill=\"#8884d8\" />\n      </ScatterChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function LinesChart(props) {\n  let data = [];\n\n  props.points.points.forEach(point => {\n    data.push({\n      x: point.x,\n      y: point.y\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <LineChart\n        width={760}\n        height={500}\n        data={data}\n        margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" type=\"number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" />\n      </LineChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function HorizontalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\"/>\n                <YAxis/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill=\"#8884d8\"/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function VerticalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                layout=\"vertical\"\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis type=\"number\"/>\n                <YAxis dataKey=\"name\" type=\"category\"/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill=\"#8884d8\"/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            family: \"Liczbowe\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.setState({\n                                    family: \"Liczbowe\"\n                                });\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.setState({\n                                    family: \"Tekstowe\"\n                                });\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.state.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.state.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.NumbersChartType === \"Punktowy\" && (\n                                    <PointsChart points={this.props.xypoints}/>\n                                )\n                            }\n                            {this.state.NumbersChartType === \"Liniowy\" && (\n                                    <LinesChart points={this.props.xypoints}/>\n                            )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.state.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints}/>\n                                )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                        </React.Fragment>\n                        }\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValueReducer.points\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint\n    }\n)(MainPage);\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}