{"version":3,"sources":["state/actions/points/pointsReducers.js","state/actions/nameAndValuePoints/nameAndValuePointsReducer.js","state/actions/selections/selectionsReducer.js","state/rootReducer.js","state/types.js","store.js","state/actions/points/pointsActions.js","state/actions/nameAndValuePoints/nameAndValuePointsActions.js","views/components/Header.js","views/components/dataInputs/XYDataInput.js","views/components/dataInputs/NameAndValueDataInput.js","views/components/charts/PointsChart.js","views/components/charts/LinesChart.js","views/components/charts/HorizontalBarChart.js","views/components/charts/VerticalBarChart.js","views/components/charts/CircleChart.js","views/pages/MainPage.js","state/actions/selections/selectionsActions.js","Routes.js","App.js","index.js"],"names":["initialState","points","selections","family","appReducer","combineReducers","XandYPoints","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","NameAndValuePoints","name","value","Selections","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","addPoint","dispatch","removePoint","editPoint","Header","csvXYFileAdded","data","_this","props","removeAllXYPoints","item","index","newPoint","uuid","isNaN","this","addXYPoint","bind","assertThisInitialized","csvNameValueFileAdded","removeAllNameAndValuePoints","addNameValuePoint","_this2","csvXYData","xypoints","csvNameValueData","nvpoints","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_csv","filename","react_csv_reader_default","cssClass","label","onFileLoaded","onError","handleDarkSideForce","inputId","inputStyle","color","onClick","Component","connect","XYDataInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","errorMessage","xValues","values","$","scrollTop","scrollHeight","editMode","val","edit","map","key","includes","Fragment","defaultValue","editModeTurnOff","editModeTurnOn","colSpan","NameAndValueDataInput","newRecord","newName","newValue","PointsChart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","angle","position","Tooltip","cursor","Legend","Scatter","fill","LinesChart","LineChart","Line","stroke","HorizontalBarChart","BarChart","barSize","ReferenceLine","Bar","VerticalBarChart","layout","CircleChart","Number","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","renderCustomizedLabel","console","log","MainPage","handleClick","displayColorPicker","handleClose","event","handleChange","rgb","hexColor","hex","NumbersChartType","TextChartType","r","g","labelXYX","labelXYY","setSelectedChartsFamily","components_dataInputs_XYDataInput","components_dataInputs_NameAndValueDataInput","lib","Routes","BrowserRouter","components_Header","Switch","Route","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5bc78b93.chunk.js","sourcesContent":["import {\n    ADD_XY_POINT,\n    REMOVE_XY_POINT,\n    EDIT_XY_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT,\n    REMOVE_ALL_XY_POINTS\n} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function (a, b) {\n                return a.x - b.x;\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_XY_POINTS:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT, REMOVE_ALL_NAMEANDVALUE_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_NAMEANDVALUE_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            // points.sort(function(a,b) {\n            //     return a.x - b.x;\n            // })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.name = action.payload.newX;\n                    point.value = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_NAMEANDVALUE_POINT:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {\n   SET_SELECTED_CHARTS_FAMILY\n} from \"../../types\";\n\nconst initialState = {\n    selections: {\n        family: 'Liczbowe'\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SELECTED_CHARTS_FAMILY:\n            return {\n                ...state,\n                selections: {\n                    family: action.payload\n                }\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport XandYPointsReducer from \"./actions/points/pointsReducers\";\nimport NameAndValueReducer from \"./actions/nameAndValuePoints/nameAndValuePointsReducer\";\nimport SelectionsReducer from \"./actions/selections/selectionsReducer\";\n\nconst appReducer = combineReducers({\n    XandYPoints: XandYPointsReducer,\n    NameAndValuePoints: NameAndValueReducer,\n    Selections: SelectionsReducer\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_XY_POINT = 'ADD_XY_POINT';\nexport const REMOVE_XY_POINT = 'REMOVE_XY_POINT';\nexport const EDIT_XY_POINT = 'EDIT_XY_POINT';\nexport const REMOVE_ALL_XY_POINTS = 'REMOVE_ALL_XY_POINTS';\n\nexport const ADD_NAMEANDVALUE_POINT = 'ADD_NAMEANDVALUE_POINT';\nexport const REMOVE_NAMEANDVALUE_POINT = 'REMOVE_NAMEANDVALUE_POINT';\nexport const EDIT_NAMEANDVALUE_POINT = 'EDIT_NAMEANDVALUE_OINT';\nexport const REMOVE_ALL_NAMEANDVALUE_POINT =  'REMOVE_ALL_NAMEANDVALUE_POINT';\n\nexport const ADD_PAIR = 'ADD_PAIR';\nexport const REMOVE_PAIR = 'REMOVE_PAIR';\nexport const EDIT_PAIR = 'EDIT_PAIR';\n\nexport const SET_SELECTED_CHARTS_FAMILY = 'SET_SELECTED_CHARTS_FAMILY';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\nexport default store;\n","import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT, REMOVE_ALL_XY_POINTS} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_XY_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_XY_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_XY_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllXYPoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_XY_POINTS,\n        payload: {}\n    })\n};","import {\n    ADD_NAMEANDVALUE_POINT,\n    REMOVE_NAMEANDVALUE_POINT,\n    EDIT_NAMEANDVALUE_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT\n} from \"../../types\";\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_NAMEANDVALUE_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_NAMEANDVALUE_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_NAMEANDVALUE_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllNameAndValuePoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_NAMEANDVALUE_POINT,\n        payload: {}\n    })\n};","import React, {Component} from \"react\";\nimport {CSVLink} from \"react-csv\";\nimport {connect} from \"react-redux\";\nimport CSVReader from 'react-csv-reader'\n\nimport {\n    addPoint as addXYPoint,\n    removeAllXYPoints\n} from \"../../state/actions/points/pointsActions\";\n\nimport {\n    addPoint as addNameValuePoint,\n    removeAllNameAndValuePoints\n} from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\nimport uuid from \"uuid\";\n\nclass Header extends Component {\n\n\n\n    csvXYFileAdded = (data) => {\n\n        this.props.removeAllXYPoints();\n\n        data.forEach( function (item, index) {\n            if(index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    x: item[0],\n                    y: item[1]\n                };\n\n                if(!isNaN(newPoint.x) && !isNaN(newPoint.y)) {\n                    this.props.addXYPoint(newPoint);\n                }\n            }\n        }.bind(this));\n    };\n\n    csvNameValueFileAdded = (data) => {\n\n        this.props.removeAllNameAndValuePoints();\n\n        data.forEach( function (item, index) {\n            if(index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    name: item[0],\n                    value: item[1]\n                };\n\n                if(!isNaN(newPoint.value)) {\n                    this.props.addNameValuePoint(newPoint);\n                }\n            }\n        }.bind(this));\n\n    }\n\n    render() {\n        let csvXYData = [];\n            this.props.xypoints.points.forEach(point => {\n                csvXYData.push({\n                    x: point.x,\n                    y: point.y\n                });\n            });\n        let csvNameValueData = [];\n            this.props.nvpoints.points.forEach(point => {\n                csvNameValueData.push({\n                    name: point.name,\n                    value: point.value\n                });\n            });\n\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            ChartsApp\n                        </a>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\"\n                                       role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Plik\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                        <CSVLink data={csvXYData} filename={\"numericData.csv\"} className=\"dropdown-item text-dark\">Pobierz dane liczbowe jako plik CSV</CSVLink>\n                                        <CSVLink data={csvNameValueData} filename={\"textData.csv\"} className=\"dropdown-item text-dark\">Pobierz dane tekstowe jako plik CSV</CSVLink>\n                                        <div className=\"dropdown-divider\"></div>\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane liczbowe z pliku CSV\"\n                                            onFileLoaded={this.csvXYFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane tekstowe z pliku CSV\"\n                                            onFileLoaded={this.csvNameValueFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                    </div>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"editNavbarMenuLink\"\n                                       role=\"button\"\n                                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Edycja\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"editNavbarMenuLink\">\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllXYPoints();\n                                           }}\n                                        >Usuń wszystkie dane liczbowe</a>\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllNameAndValuePoints();\n                                           }}\n                                        >Usuń wszystkie dane tekstowe</a>\n                                    </div>\n                                </li>\n\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych liczbowych*/}\n                                {/*</a>*/}\n                                {/*</li>*/}\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych tekstowych*/}\n                                {/*</a>*/}\n                                {/*</li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\n\nexport default connect(mapStateToProps, {\n    addXYPoint,\n    addNameValuePoint,\n    removeAllXYPoints,\n    removeAllNameAndValuePoints\n})(Header);","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport CSVReader from 'react-csv-reader'\n\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newX: \"\",\n      newY: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newPoint = {\n      id: uuid(),\n      x: this.state.newX,\n      y: this.state.newY\n    };\n\n    if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n      if (isNaN(newPoint.x)) {\n        this.setState({\n          errorMessage: \"Wartość X nie jest liczbą\"\n        });\n        return;\n      }\n\n      if (isNaN(newPoint.y)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newPoint.x;\n      })\n\n      if(Object.values(xValues).length>0) {\n        this.setState({\n          errorMessage: \"Taka wartość X już istnieje\"\n        });\n        return;\n      }\n\n\n\n\n      this.props.addPoint(newPoint);\n      this.setState({\n        errorMessage: \"\",\n        newX: \"\",\n        newY: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newX = $(\"#x_\" + id).val();\n    let newY = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newX === \"\" || newY === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newX) || isNaN(newY)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newX, newY);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">X</th>\n                <th className=\"valueWidth\">Y</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.x}</td>\n                      <td className=\"valueWidth\">{point.y}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.x}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.y}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newX\"\n                  id=\"newX\"\n                  value={this.state.newX}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newY\"\n                  id=\"newY\"\n                  value={this.state.newY}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(XYDataInput);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newName: \"\",\n      newValue: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newRecord = {\n      id: uuid(),\n        name: this.state.newName,\n        value: this.state.newValue\n    };\n\n    if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n      if (isNaN(newRecord.value)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newRecord.x;\n      })\n\n\n      this.props.addPoint(newRecord);\n      this.setState({\n        errorMessage: \"\",\n        newName: \"\",\n        newValue: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newName = $(\"#x_\" + id).val();\n    let newValue = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newName === \"\" || newValue === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newValue)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newName, newValue);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">Nazwa</th>\n                <th className=\"valueWidth\">Wartość</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.name}</td>\n                      <td className=\"valueWidth\">{point.value}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.name}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.value}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newNameInput\"\n                  name=\"newName\"\n                  id=\"newName\"\n                  value={this.state.newName}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newValue\"\n                  id=\"newValue\"\n                  value={this.state.newValue}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  points: state.NameAndValuePoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(NameAndValueDataInput);\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function PointsChart(props) {\n\n  return (\n    <React.Fragment>\n      <ScatterChart\n        width={760}\n        height={500}\n        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"x\" label={{value: \"X\"}}/>\n        <YAxis type=\"number\" dataKey=\"y\" name=\"y\" label={{ value: \"Y\", angle: -90, position: 'insideLeft' }} />\n\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n        <Legend />\n        <Scatter name=\"Dane\" data={props.points.points} fill={props.color} />\n      </ScatterChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function LinesChart(props) {\n  let data = [];\n\n  props.points.points.forEach(point => {\n    data.push({\n      x: point.x,\n      y: point.y\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <LineChart\n        width={760}\n        height={500}\n        data={data}\n        margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" type=\"number\" label={{value: \"X\"}}/>\n        <YAxis label={{ value: \"Y\", angle: -90, position: 'insideLeft' }}/>\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"y\" stroke={props.color} />\n      </LineChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function HorizontalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\" label={{value: \"Nazwa\"}}/>\n                <YAxis label={{ value: \"Wartość\", angle: -90, position: 'insideLeft' }}/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function VerticalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                layout=\"vertical\"\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis type=\"number\" label={{ value: \"Wartość\"}}/>\n                <YAxis dataKey=\"name\" type=\"category\" label={{value:\"Nazwa\"}}/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine,\n    Pie,\n    PieChart\n} from \"recharts\";\n\nexport default function CircleChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: Number(point.value)\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <PieChart width={760} height={500}>\n                <Pie isAnimationActive={true} data={data} cx={370} cy={250} outerRadius={200} fill={props.color} dataKey=\"value\" label={renderCustomizedLabel}/>\n            </PieChart>\n\n        </React.Fragment>\n    );\n}\n\n\nconst renderCustomizedLabel = (data) => {\n    console.log(data);\n    return data.name + \": \" + data.value;\n};","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {CirclePicker, GithubPicker, SketchPicker, ChromePicker} from 'react-color';\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport {setSelectedChartsFamily} from \"../../state/actions/selections/selectionsActions\"\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\n\nimport './MainPage.css'\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            displayColorPicker: false,\n            color: {\n                r: '66',\n                g: '134',\n                b: '244',\n                a: '1',\n            },\n            hexColor: '#4286f4',\n            labelXYX: \"X\",\n            labelXYY: \"Y\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\n    };\n\n    handleClose = (event) => {\n        console.log(event);\n        this.setState({displayColorPicker: false})\n    };\n\n    handleChange = (color) => {\n        console.log(color);\n        this.setState({\n            color: color.rgb,\n            hexColor: color.hex\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Liczbowe\");\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Tekstowe\");\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.props.selections.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.props.selections.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.props.selections.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.NumbersChartType === \"Punktowy\" && (\n                                    <PointsChart points={this.props.xypoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {this.state.NumbersChartType === \"Liniowy\" && (\n                                <LinesChart points={this.props.xypoints} color={this.state.hexColor}/>\n                            )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.props.selections.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"Kolowy\" && (\n                                    <CircleChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"Kolowy\"\n                                    });\n                                }}\n                            >\n                                Kołowy\n                            </button>\n                        </React.Fragment>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                    <CirclePicker className=\"colorPicker\"\n                                                  color={this.state.color}\n                                                  onChange={this.handleChange}/>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setSelectedChartsFamily\n    }\n)(MainPage);\n","import {SET_SELECTED_CHARTS_FAMILY} from '../../types';\n\nexport const setSelectedChartsFamily = (family) => dispatch => {\n    dispatch({\n        type: SET_SELECTED_CHARTS_FAMILY,\n        payload: family\n    })\n};\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}