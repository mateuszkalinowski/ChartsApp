{"version":3,"sources":["state/actions/points/pointsReducers.js","state/actions/nameAndValuePoints/nameAndValuePointsReducer.js","state/actions/selections/selectionsReducer.js","state/rootReducer.js","state/types.js","store.js","state/actions/points/pointsActions.js","views/components/Header.js","state/actions/nameAndValuePoints/nameAndValuePointsActions.js","views/components/dataInputs/XYDataInput.js","views/components/dataInputs/NameAndValueDataInput.js","views/components/charts/PointsChart.js","views/components/charts/LinesChart.js","views/components/charts/HorizontalBarChart.js","views/components/charts/VerticalBarChart.js","views/components/charts/CircleChart.js","views/pages/MainPage.js","state/actions/selections/selectionsActions.js","Routes.js","App.js","index.js"],"names":["initialState","points","selections","family","appReducer","combineReducers","XandYPoints","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","NameAndValuePoints","name","value","Selections","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","addPoint","dispatch","removePoint","editPoint","Header","_this","this","csvData","props","xypoints","nvpoints","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_csv","data","filename","onClick","removeAllXYPoints","removeAllNameAndValuePoints","Component","connect","XYDataInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","newPoint","uuid","isNaN","errorMessage","xValues","values","$","scrollTop","scrollHeight","editMode","val","edit","_this2","map","key","includes","Fragment","defaultValue","editModeTurnOff","editModeTurnOn","colSpan","NameAndValueDataInput","newRecord","newName","newValue","PointsChart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","cursor","Legend","Scatter","fill","color","LinesChart","LineChart","Line","stroke","HorizontalBarChart","BarChart","barSize","ReferenceLine","Bar","VerticalBarChart","layout","CircleChart","Number","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","label","renderCustomizedLabel","console","log","MainPage","handleClick","displayColorPicker","handleClose","event","handleChange","rgb","hexColor","hex","NumbersChartType","TextChartType","r","g","setSelectedChartsFamily","components_dataInputs_XYDataInput","components_dataInputs_NameAndValueDataInput","lib","Routes","BrowserRouter","components_Header","Switch","Route","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3929e5a4.chunk.js","sourcesContent":["import {\n    ADD_XY_POINT,\n    REMOVE_XY_POINT,\n    EDIT_XY_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT,\n    REMOVE_ALL_XY_POINTS\n} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function (a, b) {\n                return a.x - b.x;\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_XY_POINTS:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT, REMOVE_ALL_NAMEANDVALUE_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_NAMEANDVALUE_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            // points.sort(function(a,b) {\n            //     return a.x - b.x;\n            // })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.name = action.payload.newX;\n                    point.value = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_NAMEANDVALUE_POINT:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {\n   SET_SELECTED_CHARTS_FAMILY\n} from \"../../types\";\n\nconst initialState = {\n    selections: {\n        family: 'Liczbowe'\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SELECTED_CHARTS_FAMILY:\n            return {\n                ...state,\n                selections: {\n                    family: action.payload\n                }\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport XandYPointsReducer from \"./actions/points/pointsReducers\";\nimport NameAndValueReducer from \"./actions/nameAndValuePoints/nameAndValuePointsReducer\";\nimport SelectionsReducer from \"./actions/selections/selectionsReducer\";\n\nconst appReducer = combineReducers({\n    XandYPoints: XandYPointsReducer,\n    NameAndValuePoints: NameAndValueReducer,\n    Selections: SelectionsReducer\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_XY_POINT = 'ADD_XY_POINT';\nexport const REMOVE_XY_POINT = 'REMOVE_XY_POINT';\nexport const EDIT_XY_POINT = 'EDIT_XY_POINT';\nexport const REMOVE_ALL_XY_POINTS = 'REMOVE_ALL_XY_POINTS';\n\nexport const ADD_NAMEANDVALUE_POINT = 'ADD_NAMEANDVALUE_POINT';\nexport const REMOVE_NAMEANDVALUE_POINT = 'REMOVE_NAMEANDVALUE_POINT';\nexport const EDIT_NAMEANDVALUE_POINT = 'EDIT_NAMEANDVALUE_OINT';\nexport const REMOVE_ALL_NAMEANDVALUE_POINT =  'REMOVE_ALL_NAMEANDVALUE_POINT';\n\nexport const ADD_PAIR = 'ADD_PAIR';\nexport const REMOVE_PAIR = 'REMOVE_PAIR';\nexport const EDIT_PAIR = 'EDIT_PAIR';\n\nexport const SET_SELECTED_CHARTS_FAMILY = 'SET_SELECTED_CHARTS_FAMILY';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT, REMOVE_ALL_XY_POINTS} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_XY_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_XY_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_XY_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllXYPoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_XY_POINTS,\n        payload: {}\n    })\n};","import React, {Component} from \"react\";\nimport {CSVLink} from \"react-csv\";\nimport {connect} from \"react-redux\";\n\nimport {\n    removeAllXYPoints\n} from \"../../state/actions/points/pointsActions\";\n\nimport {\n    removeAllNameAndValuePoints\n} from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nclass Header extends Component {\n    render() {\n        let csvData = [];\n        if(this.props.selections.family === \"Liczbowe\") {\n            this.props.xypoints.points.forEach(point => {\n                csvData.push({\n                    x: point.x,\n                    y: point.y\n                });\n            });\n        }\n        if(this.props.selections.family === \"Tekstowe\") {\n            this.props.nvpoints.points.forEach(point => {\n                csvData.push({\n                    name: point.name,\n                    value: point.value\n                });\n            });\n        }\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            ChartsApp\n                        </a>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\"\n                                       role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Plik\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                        <CSVLink data={csvData} filename={\"data.csv\"} className=\"dropdown-item text-dark\">Pobierz dane jako plik CSV</CSVLink>\n                                        {/*<a class=\"dropdown-item\" href=\"#\"></a>*/}\n                                        {/*<a class=\"dropdown-item\" href=\"#\"></a>*/}\n                                    </div>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"editNavbarMenuLink\"\n                                       role=\"button\"\n                                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Edycja\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"editNavbarMenuLink\">\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllXYPoints();\n                                           }}\n                                        >Usuń wszystkie dane liczbowe</a>\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllNameAndValuePoints();\n                                           }}\n                                        >Usuń wszystkie dane tekstowe</a>\n                                    </div>\n                                </li>\n\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych liczbowych*/}\n                                {/*</a>*/}\n                                {/*</li>*/}\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych tekstowych*/}\n                                {/*</a>*/}\n                                {/*</li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\n\nexport default connect(mapStateToProps, {\n    removeAllXYPoints,\n    removeAllNameAndValuePoints\n})(Header);","import {\n    ADD_NAMEANDVALUE_POINT,\n    REMOVE_NAMEANDVALUE_POINT,\n    EDIT_NAMEANDVALUE_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT\n} from \"../../types\";\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_NAMEANDVALUE_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_NAMEANDVALUE_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_NAMEANDVALUE_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllNameAndValuePoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_NAMEANDVALUE_POINT,\n        payload: {}\n    })\n};","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport CSVReader from 'react-csv-reader'\n\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newX: \"\",\n      newY: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newPoint = {\n      id: uuid(),\n      x: this.state.newX,\n      y: this.state.newY\n    };\n\n    if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n      if (isNaN(newPoint.x)) {\n        this.setState({\n          errorMessage: \"Wartość X nie jest liczbą\"\n        });\n        return;\n      }\n\n      if (isNaN(newPoint.y)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newPoint.x;\n      })\n\n      if(Object.values(xValues).length>0) {\n        this.setState({\n          errorMessage: \"Taka wartość X już istnieje\"\n        });\n        return;\n      }\n\n\n\n\n      this.props.addPoint(newPoint);\n      this.setState({\n        errorMessage: \"\",\n        newX: \"\",\n        newY: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newX = $(\"#x_\" + id).val();\n    let newY = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newX === \"\" || newY === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newX) || isNaN(newY)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newX, newY);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">X</th>\n                <th className=\"valueWidth\">Y</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.x}</td>\n                      <td className=\"valueWidth\">{point.y}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.x}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.y}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newX\"\n                  id=\"newX\"\n                  value={this.state.newX}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newY\"\n                  id=\"newY\"\n                  value={this.state.newY}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(XYDataInput);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newName: \"\",\n      newValue: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newRecord = {\n      id: uuid(),\n        name: this.state.newName,\n        value: this.state.newValue\n    };\n\n    if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n      if (isNaN(newRecord.value)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newRecord.x;\n      })\n\n\n      this.props.addPoint(newRecord);\n      this.setState({\n        errorMessage: \"\",\n        newName: \"\",\n        newValue: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newName = $(\"#x_\" + id).val();\n    let newValue = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newName === \"\" || newValue === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newValue)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newName, newValue);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">Nazwa</th>\n                <th className=\"valueWidth\">Wartość</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.name}</td>\n                      <td className=\"valueWidth\">{point.value}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.name}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.value}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newNameInput\"\n                  name=\"newName\"\n                  id=\"newName\"\n                  value={this.state.newName}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newValue\"\n                  id=\"newValue\"\n                  value={this.state.newValue}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  points: state.NameAndValuePoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(NameAndValueDataInput);\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function PointsChart(props) {\n\n  return (\n    <React.Fragment>\n      <ScatterChart\n        width={760}\n        height={500}\n        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"x\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"y\" />\n\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n        <Legend />\n        <Scatter name=\"Dane\" data={props.points.points} fill={props.color} />\n      </ScatterChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function LinesChart(props) {\n  let data = [];\n\n  props.points.points.forEach(point => {\n    data.push({\n      x: point.x,\n      y: point.y\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <LineChart\n        width={760}\n        height={500}\n        data={data}\n        margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" type=\"number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"y\" stroke={props.color} />\n      </LineChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function HorizontalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\"/>\n                <YAxis/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function VerticalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                layout=\"vertical\"\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis type=\"number\"/>\n                <YAxis dataKey=\"name\" type=\"category\"/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine,\n    Pie,\n    PieChart\n} from \"recharts\";\n\nexport default function CircleChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: Number(point.value)\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <PieChart width={760} height={500}>\n                <Pie isAnimationActive={true} data={data} cx={370} cy={250} outerRadius={200} fill={props.color} dataKey=\"value\" label={renderCustomizedLabel}/>\n            </PieChart>\n\n        </React.Fragment>\n    );\n}\n\n\nconst renderCustomizedLabel = (data) => {\n    console.log(data);\n    return data.name + \": \" + data.value;\n};","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {CirclePicker, GithubPicker, SketchPicker, ChromePicker} from 'react-color';\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport {setSelectedChartsFamily} from \"../../state/actions/selections/selectionsActions\"\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\n\nimport './MainPage.css'\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            displayColorPicker: false,\n            color: {\n                r: '66',\n                g: '134',\n                b: '244',\n                a: '1',\n            },\n            hexColor: '#4286f4'\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\n    };\n\n    handleClose = (event) => {\n        console.log(event);\n        this.setState({displayColorPicker: false})\n    };\n\n    handleChange = (color) => {\n        console.log(color);\n        this.setState({\n            color: color.rgb,\n            hexColor: color.hex\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Liczbowe\");\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Tekstowe\");\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.props.selections.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.props.selections.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.props.selections.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.NumbersChartType === \"Punktowy\" && (\n                                    <PointsChart points={this.props.xypoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {this.state.NumbersChartType === \"Liniowy\" && (\n                                <LinesChart points={this.props.xypoints} color={this.state.hexColor}/>\n                            )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.props.selections.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"Kolowy\" && (\n                                    <CircleChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"Kolowy\"\n                                    });\n                                }}\n                            >\n                                Kołowy\n                            </button>\n                        </React.Fragment>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                    <CirclePicker className=\"colorPicker\"\n                                                  color={this.state.color}\n                                                  onChange={this.handleChange}/>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setSelectedChartsFamily\n    }\n)(MainPage);\n","import {SET_SELECTED_CHARTS_FAMILY} from '../../types';\n\nexport const setSelectedChartsFamily = (family) => dispatch => {\n    dispatch({\n        type: SET_SELECTED_CHARTS_FAMILY,\n        payload: family\n    })\n};\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}