{"version":3,"sources":["state/actions/points/pointsReducers.js","state/actions/nameAndValuePoints/nameAndValuePointsReducer.js","state/actions/selections/selectionsReducer.js","state/rootReducer.js","state/types.js","store.js","state/actions/points/pointsActions.js","state/actions/nameAndValuePoints/nameAndValuePointsActions.js","views/components/Header.js","views/components/dataInputs/XYDataInput.js","views/components/dataInputs/NameAndValueDataInput.js","views/components/charts/PointsChart.js","views/components/charts/LinesChart.js","views/components/charts/HorizontalBarChart.js","views/components/charts/VerticalBarChart.js","views/components/charts/CircleChart.js","views/pages/MainPage.js","state/actions/selections/selectionsActions.js","Routes.js","App.js","index.js"],"names":["initialState","points","selections","family","appReducer","combineReducers","XandYPoints","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","NameAndValuePoints","name","value","Selections","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","addPoint","dispatch","removePoint","editPoint","Header","csvXYFileAdded","data","_this","props","removeAllXYPoints","item","index","newPoint","uuid","isNaN","this","addXYPoint","bind","assertThisInitialized","csvNameValueFileAdded","removeAllNameAndValuePoints","addNameValuePoint","_this2","csvXYData","xypoints","csvNameValueData","nvpoints","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_csv","filename","react_csv_reader_default","cssClass","label","onFileLoaded","onError","handleDarkSideForce","inputId","inputStyle","color","onClick","Component","connect","XYDataInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","errorMessage","xValues","values","$","scrollTop","scrollHeight","editMode","val","edit","map","key","includes","Fragment","defaultValue","editModeTurnOff","editModeTurnOn","colSpan","NameAndValueDataInput","newRecord","newName","newValue","PointsChart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","cursor","Legend","Scatter","fill","LinesChart","LineChart","Line","stroke","HorizontalBarChart","BarChart","barSize","ReferenceLine","Bar","VerticalBarChart","layout","CircleChart","Number","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","renderCustomizedLabel","console","log","MainPage","handleClick","displayColorPicker","handleClose","event","handleChange","rgb","hexColor","hex","NumbersChartType","TextChartType","r","g","setSelectedChartsFamily","components_dataInputs_XYDataInput","components_dataInputs_NameAndValueDataInput","lib","Routes","BrowserRouter","components_Header","Switch","Route","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8e7e06b8.chunk.js","sourcesContent":["import {\n    ADD_XY_POINT,\n    REMOVE_XY_POINT,\n    EDIT_XY_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT,\n    REMOVE_ALL_XY_POINTS\n} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function (a, b) {\n                return a.x - b.x;\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_XY_POINTS:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT, REMOVE_ALL_NAMEANDVALUE_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_NAMEANDVALUE_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            // points.sort(function(a,b) {\n            //     return a.x - b.x;\n            // })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.name = action.payload.newX;\n                    point.value = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_NAMEANDVALUE_POINT:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {\n   SET_SELECTED_CHARTS_FAMILY\n} from \"../../types\";\n\nconst initialState = {\n    selections: {\n        family: 'Liczbowe'\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SELECTED_CHARTS_FAMILY:\n            return {\n                ...state,\n                selections: {\n                    family: action.payload\n                }\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport XandYPointsReducer from \"./actions/points/pointsReducers\";\nimport NameAndValueReducer from \"./actions/nameAndValuePoints/nameAndValuePointsReducer\";\nimport SelectionsReducer from \"./actions/selections/selectionsReducer\";\n\nconst appReducer = combineReducers({\n    XandYPoints: XandYPointsReducer,\n    NameAndValuePoints: NameAndValueReducer,\n    Selections: SelectionsReducer\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_XY_POINT = 'ADD_XY_POINT';\nexport const REMOVE_XY_POINT = 'REMOVE_XY_POINT';\nexport const EDIT_XY_POINT = 'EDIT_XY_POINT';\nexport const REMOVE_ALL_XY_POINTS = 'REMOVE_ALL_XY_POINTS';\n\nexport const ADD_NAMEANDVALUE_POINT = 'ADD_NAMEANDVALUE_POINT';\nexport const REMOVE_NAMEANDVALUE_POINT = 'REMOVE_NAMEANDVALUE_POINT';\nexport const EDIT_NAMEANDVALUE_POINT = 'EDIT_NAMEANDVALUE_OINT';\nexport const REMOVE_ALL_NAMEANDVALUE_POINT =  'REMOVE_ALL_NAMEANDVALUE_POINT';\n\nexport const ADD_PAIR = 'ADD_PAIR';\nexport const REMOVE_PAIR = 'REMOVE_PAIR';\nexport const EDIT_PAIR = 'EDIT_PAIR';\n\nexport const SET_SELECTED_CHARTS_FAMILY = 'SET_SELECTED_CHARTS_FAMILY';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT, REMOVE_ALL_XY_POINTS} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_XY_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_XY_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_XY_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllXYPoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_XY_POINTS,\n        payload: {}\n    })\n};","import {\n    ADD_NAMEANDVALUE_POINT,\n    REMOVE_NAMEANDVALUE_POINT,\n    EDIT_NAMEANDVALUE_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT\n} from \"../../types\";\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_NAMEANDVALUE_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_NAMEANDVALUE_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_NAMEANDVALUE_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllNameAndValuePoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_NAMEANDVALUE_POINT,\n        payload: {}\n    })\n};","import React, {Component} from \"react\";\nimport {CSVLink} from \"react-csv\";\nimport {connect} from \"react-redux\";\nimport CSVReader from 'react-csv-reader'\n\nimport {\n    addPoint as addXYPoint,\n    removeAllXYPoints\n} from \"../../state/actions/points/pointsActions\";\n\nimport {\n    addPoint as addNameValuePoint,\n    removeAllNameAndValuePoints\n} from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\nimport uuid from \"uuid\";\n\nclass Header extends Component {\n\n\n\n    csvXYFileAdded = (data) => {\n\n        this.props.removeAllXYPoints();\n\n        data.forEach( function (item, index) {\n            if(index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    x: item[0],\n                    y: item[1]\n                };\n\n                if(!isNaN(newPoint.x) && !isNaN(newPoint.y)) {\n                    this.props.addXYPoint(newPoint);\n                }\n            }\n        }.bind(this));\n    };\n\n    csvNameValueFileAdded = (data) => {\n\n        this.props.removeAllNameAndValuePoints();\n\n        data.forEach( function (item, index) {\n            if(index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    name: item[0],\n                    value: item[1]\n                };\n\n                if(!isNaN(newPoint.value)) {\n                    this.props.addNameValuePoint(newPoint);\n                }\n            }\n        }.bind(this));\n\n    }\n\n    render() {\n        let csvXYData = [];\n            this.props.xypoints.points.forEach(point => {\n                csvXYData.push({\n                    x: point.x,\n                    y: point.y\n                });\n            });\n        let csvNameValueData = [];\n            this.props.nvpoints.points.forEach(point => {\n                csvNameValueData.push({\n                    name: point.name,\n                    value: point.value\n                });\n            });\n\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            ChartsApp\n                        </a>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\"\n                                       role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Plik\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                        <CSVLink data={csvXYData} filename={\"numericData.csv\"} className=\"dropdown-item text-dark\">Pobierz dane liczbowe jako plik CSV</CSVLink>\n                                        <CSVLink data={csvNameValueData} filename={\"textData.csv\"} className=\"dropdown-item text-dark\">Pobierz dane tekstowe jako plik CSV</CSVLink>\n                                        <div className=\"dropdown-divider\"></div>\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane liczbowe z pliku CSV\"\n                                            onFileLoaded={this.csvXYFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane tekstowe z pliku CSV\"\n                                            onFileLoaded={this.csvNameValueFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                    </div>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"editNavbarMenuLink\"\n                                       role=\"button\"\n                                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Edycja\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"editNavbarMenuLink\">\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllXYPoints();\n                                           }}\n                                        >Usuń wszystkie dane liczbowe</a>\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllNameAndValuePoints();\n                                           }}\n                                        >Usuń wszystkie dane tekstowe</a>\n                                    </div>\n                                </li>\n\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych liczbowych*/}\n                                {/*</a>*/}\n                                {/*</li>*/}\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych tekstowych*/}\n                                {/*</a>*/}\n                                {/*</li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\n\nexport default connect(mapStateToProps, {\n    addXYPoint,\n    addNameValuePoint,\n    removeAllXYPoints,\n    removeAllNameAndValuePoints\n})(Header);","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport CSVReader from 'react-csv-reader'\n\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newX: \"\",\n      newY: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newPoint = {\n      id: uuid(),\n      x: this.state.newX,\n      y: this.state.newY\n    };\n\n    if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n      if (isNaN(newPoint.x)) {\n        this.setState({\n          errorMessage: \"Wartość X nie jest liczbą\"\n        });\n        return;\n      }\n\n      if (isNaN(newPoint.y)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newPoint.x;\n      })\n\n      if(Object.values(xValues).length>0) {\n        this.setState({\n          errorMessage: \"Taka wartość X już istnieje\"\n        });\n        return;\n      }\n\n\n\n\n      this.props.addPoint(newPoint);\n      this.setState({\n        errorMessage: \"\",\n        newX: \"\",\n        newY: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newX = $(\"#x_\" + id).val();\n    let newY = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newX === \"\" || newY === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newX) || isNaN(newY)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newX, newY);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">X</th>\n                <th className=\"valueWidth\">Y</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.x}</td>\n                      <td className=\"valueWidth\">{point.y}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.x}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.y}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newX\"\n                  id=\"newX\"\n                  value={this.state.newX}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newY\"\n                  id=\"newY\"\n                  value={this.state.newY}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(XYDataInput);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newName: \"\",\n      newValue: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newRecord = {\n      id: uuid(),\n        name: this.state.newName,\n        value: this.state.newValue\n    };\n\n    if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n      if (isNaN(newRecord.value)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      let xValues = Object.values(this.props.points.points).filter(point => {\n          return point.x === newRecord.x;\n      })\n\n\n      this.props.addPoint(newRecord);\n      this.setState({\n        errorMessage: \"\",\n        newName: \"\",\n        newValue: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newName = $(\"#x_\" + id).val();\n    let newValue = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newName === \"\" || newValue === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newValue)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newName, newValue);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>\n          <strong>Dane:</strong>\n        </h4>\n        <div className=\"list\" id=\"listDiv\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"valueWidth\">Nazwa</th>\n                <th className=\"valueWidth\">Wartość</th>\n                <th>Akcje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(this.props.points.points).map(point => (\n                <tr key={uuid()}>\n                  {!this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">{point.name}</td>\n                      <td className=\"valueWidth\">{point.value}</td>\n                    </React.Fragment>\n                  )}\n                  {this.state.editMode.includes(point.id) && (\n                    <React.Fragment>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.name}\n                          id={\"x_\" + point.id}\n                        />\n                      </td>\n                      <td className=\"valueWidth\">\n                        <input\n                          className=\"newValueInput text-center\"\n                          defaultValue={point.value}\n                          id={\"y_\" + point.id}\n                        />\n                      </td>\n                    </React.Fragment>\n                  )}\n                  <td className=\"buttonsWidth\">\n                    {this.state.editMode.includes(point.id) ? (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOff(point.id);\n                        }}\n                      >\n                        Zapisz\n                      </button>\n                    ) : (\n                      <button\n                        className=\"btn btn-success btn-small tableButton mx-3\"\n                        onClick={() => {\n                          this.editModeTurnOn(point.id);\n                        }}\n                      >\n                        Edytuj\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-danger btn-small tableButton mx-3\"\n                      onClick={() => {\n                        this.removePoint(point.id);\n                      }}\n                    >\n                      Usuń\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  className=\"form-input text-center newNameInput\"\n                  name=\"newName\"\n                  id=\"newName\"\n                  value={this.state.newName}\n                  onChange={this.onChange}\n                />\n              </td>\n              <td>\n                <input\n                  className=\"form-input text-center newValueInput\"\n                  name=\"newValue\"\n                  id=\"newValue\"\n                  value={this.state.newValue}\n                  onChange={this.onChange}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <button\n                  className=\"btn btn-primary btn-block btn-sm\"\n                  onClick={this.addPoint}\n                >\n                  Dodaj\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  points: state.NameAndValuePoints.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(NameAndValueDataInput);\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function PointsChart(props) {\n\n  return (\n    <React.Fragment>\n      <ScatterChart\n        width={760}\n        height={500}\n        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"x\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"y\" />\n\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n        <Legend />\n        <Scatter name=\"Dane\" data={props.points.points} fill={props.color} />\n      </ScatterChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function LinesChart(props) {\n  let data = [];\n\n  props.points.points.forEach(point => {\n    data.push({\n      x: point.x,\n      y: point.y\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <LineChart\n        width={760}\n        height={500}\n        data={data}\n        margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" type=\"number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"y\" stroke={props.color} />\n      </LineChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function HorizontalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\"/>\n                <YAxis/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function VerticalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                layout=\"vertical\"\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis type=\"number\"/>\n                <YAxis dataKey=\"name\" type=\"category\"/>\n                <Tooltip/>\n                <Legend/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine,\n    Pie,\n    PieChart\n} from \"recharts\";\n\nexport default function CircleChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: Number(point.value)\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <PieChart width={760} height={500}>\n                <Pie isAnimationActive={true} data={data} cx={370} cy={250} outerRadius={200} fill={props.color} dataKey=\"value\" label={renderCustomizedLabel}/>\n            </PieChart>\n\n        </React.Fragment>\n    );\n}\n\n\nconst renderCustomizedLabel = (data) => {\n    console.log(data);\n    return data.name + \": \" + data.value;\n};","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {CirclePicker, GithubPicker, SketchPicker, ChromePicker} from 'react-color';\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport {setSelectedChartsFamily} from \"../../state/actions/selections/selectionsActions\"\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\n\nimport './MainPage.css'\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            displayColorPicker: false,\n            color: {\n                r: '66',\n                g: '134',\n                b: '244',\n                a: '1',\n            },\n            hexColor: '#4286f4'\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\n    };\n\n    handleClose = (event) => {\n        console.log(event);\n        this.setState({displayColorPicker: false})\n    };\n\n    handleChange = (color) => {\n        console.log(color);\n        this.setState({\n            color: color.rgb,\n            hexColor: color.hex\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Liczbowe\");\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Tekstowe\");\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.props.selections.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.props.selections.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.props.selections.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.NumbersChartType === \"Punktowy\" && (\n                                    <PointsChart points={this.props.xypoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {this.state.NumbersChartType === \"Liniowy\" && (\n                                <LinesChart points={this.props.xypoints} color={this.state.hexColor}/>\n                            )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.props.selections.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"Kolowy\" && (\n                                    <CircleChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"Kolowy\"\n                                    });\n                                }}\n                            >\n                                Kołowy\n                            </button>\n                        </React.Fragment>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                    <CirclePicker className=\"colorPicker\"\n                                                  color={this.state.color}\n                                                  onChange={this.handleChange}/>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setSelectedChartsFamily\n    }\n)(MainPage);\n","import {SET_SELECTED_CHARTS_FAMILY} from '../../types';\n\nexport const setSelectedChartsFamily = (family) => dispatch => {\n    dispatch({\n        type: SET_SELECTED_CHARTS_FAMILY,\n        payload: family\n    })\n};\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}