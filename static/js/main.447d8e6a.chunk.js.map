{"version":3,"sources":["state/actions/points/pointsReducers.js","state/actions/nameAndValuePoints/nameAndValuePointsReducer.js","state/actions/selections/selectionsReducer.js","state/rootReducer.js","state/types.js","store.js","state/actions/points/pointsActions.js","state/actions/nameAndValuePoints/nameAndValuePointsActions.js","state/actions/selections/selectionsActions.js","views/components/Header.js","views/components/dataInputs/XYDataInput.js","views/components/dataInputs/NameAndValueDataInput.js","views/components/charts/PointsChart.js","views/components/charts/LinesChart.js","views/components/charts/HorizontalBarChart.js","views/components/charts/VerticalBarChart.js","views/components/charts/CircleChart.js","views/pages/MainPage.js","Routes.js","App.js","index.js"],"names":["initialState","points","selections","family","xLabel","yLabel","nameLabel","valueLabel","helpVisible","appReducer","combineReducers","XandYPoints","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","NameAndValuePoints","name","value","Selections","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","addPoint","dispatch","removePoint","editPoint","setXLabel","newLabel","setYLabel","setNameLabel","setValueLabel","Header","csvXYFileAdded","data","_this","props","removeAllXYPoints","item","index","newPoint","uuid","isNaN","this","addXYPoint","bind","assertThisInitialized","csvNameValueFileAdded","removeAllNameAndValuePoints","addNameValuePoint","_this2","csvXYData","xypoints","_csvXYData$push","defineProperty","csvNameValueData","nvpoints","_csvNameValueData$pus","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_csv","filename","react_csv_reader_default","cssClass","label","onFileLoaded","onError","handleDarkSideForce","inputId","inputStyle","color","onClick","setHelpVisible","Component","connect","visible","XYDataInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","target","errorMessage","xValues","values","$","scrollTop","scrollHeight","xInputRef","React","createRef","yInputRef","editMode","xEditMode","yEditMode","val","edit","ref","autoFocus","defaultValue","onBlur","current","map","key","includes","Fragment","editModeTurnOff","editModeTurnOn","colSpan","NameAndValueDataInput","newRecord","newName","newValue","nameInputRef","valueInputRef","nameEditMode","valueEditMode","PointsChart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","position","offset","YAxis","angle","Tooltip","cursor","Legend","align","verticalAlign","Scatter","fill","LinesChart","LineChart","Line","stroke","HorizontalBarChart","BarChart","barSize","ReferenceLine","Bar","VerticalBarChart","layout","CircleChart","Number","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","renderCustomizedLabel","console","log","MainPage","handleClick","displayColorPicker","handleClose","event","handleChange","rgb","hexColor","hex","NumbersChartType","TextChartType","r","g","labelXYX","labelXYY","setSelectedChartsFamily","components_dataInputs_XYDataInput","components_dataInputs_NameAndValueDataInput","lib","Routes","BrowserRouter","components_Header","Switch","Route","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.447d8e6a.chunk.js","sourcesContent":["import {\n    ADD_XY_POINT,\n    REMOVE_XY_POINT,\n    EDIT_XY_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT,\n    REMOVE_ALL_XY_POINTS\n} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function (a, b) {\n                return a.x - b.x;\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_XY_POINTS:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT, REMOVE_ALL_NAMEANDVALUE_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_NAMEANDVALUE_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            // points.sort(function(a,b) {\n            //     return a.x - b.x;\n            // })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.name = action.payload.newX;\n                    point.value = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_NAMEANDVALUE_POINT:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {\n   SET_SELECTED_CHARTS_FAMILY,\n    SET_X_LABEL,\n    SET_Y_LABEL,\n    SET_NAME_LABEL,\n    SET_VALUE_LABEL,\n    SET_HELP_VISIBLE\n} from \"../../types\";\n\nconst initialState = {\n    selections: {\n        family: 'Liczbowe',\n        xLabel: 'X',\n        yLabel: 'Y',\n        nameLabel: 'Nazwa',\n        valueLabel: 'Wartość',\n        helpVisible: false\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SELECTED_CHARTS_FAMILY:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    family: action.payload\n                }\n            };\n        case SET_X_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    xLabel: action.payload\n                }\n            };\n        case SET_Y_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    yLabel: action.payload\n                }\n            };\n        case SET_NAME_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    nameLabel: action.payload\n                }\n            };\n        case SET_VALUE_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    valueLabel: action.payload\n                }\n            };\n        case SET_HELP_VISIBLE:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    helpVisible: action.payload\n                }\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport XandYPointsReducer from \"./actions/points/pointsReducers\";\nimport NameAndValueReducer from \"./actions/nameAndValuePoints/nameAndValuePointsReducer\";\nimport SelectionsReducer from \"./actions/selections/selectionsReducer\";\n\nconst appReducer = combineReducers({\n    XandYPoints: XandYPointsReducer,\n    NameAndValuePoints: NameAndValueReducer,\n    Selections: SelectionsReducer\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_XY_POINT = 'ADD_XY_POINT';\nexport const REMOVE_XY_POINT = 'REMOVE_XY_POINT';\nexport const EDIT_XY_POINT = 'EDIT_XY_POINT';\nexport const REMOVE_ALL_XY_POINTS = 'REMOVE_ALL_XY_POINTS';\n\nexport const ADD_NAMEANDVALUE_POINT = 'ADD_NAMEANDVALUE_POINT';\nexport const REMOVE_NAMEANDVALUE_POINT = 'REMOVE_NAMEANDVALUE_POINT';\nexport const EDIT_NAMEANDVALUE_POINT = 'EDIT_NAMEANDVALUE_OINT';\nexport const REMOVE_ALL_NAMEANDVALUE_POINT =  'REMOVE_ALL_NAMEANDVALUE_POINT';\n\nexport const ADD_PAIR = 'ADD_PAIR';\nexport const REMOVE_PAIR = 'REMOVE_PAIR';\nexport const EDIT_PAIR = 'EDIT_PAIR';\n\nexport const SET_SELECTED_CHARTS_FAMILY = 'SET_SELECTED_CHARTS_FAMILY';\n\nexport const SET_X_LABEL = 'SET_X_LABEL';\nexport const SET_Y_LABEL = 'SET_Y_LABEL';\nexport const SET_NAME_LABEL = 'SET_NAME_LABEL';\nexport const SET_VALUE_LABEL = 'SET_VALUE_LABEL';\n\nexport const SET_HELP_VISIBLE = \"SET_HELP_VISIBLE\";","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT, REMOVE_ALL_XY_POINTS} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_XY_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_XY_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_XY_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllXYPoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_XY_POINTS,\n        payload: {}\n    })\n};","import {\n    ADD_NAMEANDVALUE_POINT,\n    REMOVE_NAMEANDVALUE_POINT,\n    EDIT_NAMEANDVALUE_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT\n} from \"../../types\";\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_NAMEANDVALUE_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_NAMEANDVALUE_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_NAMEANDVALUE_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllNameAndValuePoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_NAMEANDVALUE_POINT,\n        payload: {}\n    })\n};","import {SET_SELECTED_CHARTS_FAMILY, SET_X_LABEL, SET_Y_LABEL, SET_NAME_LABEL, SET_VALUE_LABEL, SET_HELP_VISIBLE} from '../../types';\n\nexport const setSelectedChartsFamily = (family) => dispatch => {\n    dispatch({\n        type: SET_SELECTED_CHARTS_FAMILY,\n        payload: family\n    })\n};\n\nexport const setXLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_X_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setYLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_Y_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setNameLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_NAME_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setValueLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_VALUE_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setHelpVisible = (visible) => dispatch => {\n    dispatch({\n        type: SET_HELP_VISIBLE,\n        payload: visible\n    })\n}","import React, {Component} from \"react\";\nimport {CSVLink} from \"react-csv\";\nimport {connect} from \"react-redux\";\nimport CSVReader from 'react-csv-reader'\n\nimport {\n    addPoint as addXYPoint,\n    removeAllXYPoints\n} from \"../../state/actions/points/pointsActions\";\n\nimport {\n    addPoint as addNameValuePoint,\n    removeAllNameAndValuePoints\n} from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport {\n    setXLabel,\n    setYLabel,\n    setNameLabel,\n    setValueLabel,\n    setHelpVisible\n} from \"../../state/actions/selections/selectionsActions\";\nimport uuid from \"uuid\";\n\nclass Header extends Component {\n\n\n    csvXYFileAdded = (data) => {\n\n        this.props.removeAllXYPoints();\n\n        data.forEach(function (item, index) {\n            if (index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    x: item[0],\n                    y: item[1]\n                };\n\n                if (!isNaN(newPoint.x) && !isNaN(newPoint.y)) {\n                    this.props.addXYPoint(newPoint);\n                }\n            } else {\n                this.props.setXLabel(item[0]);\n                this.props.setYLabel(item[1]);\n            }\n        }.bind(this));\n    };\n\n    csvNameValueFileAdded = (data) => {\n\n        this.props.removeAllNameAndValuePoints();\n\n        data.forEach(function (item, index) {\n            if (index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    name: item[0],\n                    value: item[1]\n                };\n\n                if (!isNaN(newPoint.value)) {\n                    this.props.addNameValuePoint(newPoint);\n                }\n            } else {\n                this.props.setNameLabel(item[0]);\n                this.props.setValueLabel(item[1]);\n            }\n        }.bind(this));\n\n    }\n\n    render() {\n        let csvXYData = [];\n        this.props.xypoints.points.forEach(point => {\n            csvXYData.push({\n                [this.props.selections.xLabel]: point.x,\n                [this.props.selections.yLabel]: point.y\n            });\n        });\n        let csvNameValueData = [];\n        this.props.nvpoints.points.forEach(point => {\n            csvNameValueData.push({\n                [this.props.selections.nameLabel]: point.name,\n                [this.props.selections.valueLabel]: point.value\n            });\n        });\n\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            ChartsApp\n                        </a>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\"\n                                       role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Plik\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                        <CSVLink data={csvXYData} filename={\"numericData.csv\"}\n                                                 className=\"dropdown-item text-dark\">Pobierz dane liczbowe jako plik\n                                            CSV</CSVLink>\n                                        <CSVLink data={csvNameValueData} filename={\"textData.csv\"}\n                                                 className=\"dropdown-item text-dark\">Pobierz dane tekstowe jako plik\n                                            CSV</CSVLink>\n                                        <div className=\"dropdown-divider\"></div>\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane liczbowe z pliku CSV\"\n                                            onFileLoaded={this.csvXYFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane tekstowe z pliku CSV\"\n                                            onFileLoaded={this.csvNameValueFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                    </div>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"editNavbarMenuLink\"\n                                       role=\"button\"\n                                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Edycja\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"editNavbarMenuLink\">\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllXYPoints();\n                                           }}\n                                        >Usuń wszystkie dane liczbowe</a>\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllNameAndValuePoints();\n                                           }}\n                                        >Usuń wszystkie dane tekstowe</a>\n                                    </div>\n                                </li>\n                                {this.props.selections.helpVisible === false &&\n                                <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\"\n                                onClick={() => {\n                                this.props.setHelpVisible(true);\n                                }\n                                }\n                                >\n                                    Pokaż pomoc\n                                </a>\n                                </li>\n                                }\n                                {this.props.selections.helpVisible === true &&\n                                <li className=\"nav-item active\">\n                                    <a className=\"nav-link\" href=\"#\"\n                                    onClick={() => {\n                                    this.props.setHelpVisible(false);\n                                    }\n                                    }\n                                    >\n                                        Ukryj pomoc\n                                    </a>\n                                </li>\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\n\nexport default connect(mapStateToProps, {\n    addXYPoint,\n    addNameValuePoint,\n    removeAllXYPoints,\n    removeAllNameAndValuePoints,\n    setXLabel,\n    setYLabel,\n    setNameLabel,\n    setValueLabel,\n    setHelpVisible\n})(Header);","import React, {Component} from \"react\";\n\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\n\nimport {\n    setXLabel,\n    setYLabel\n} from \"../../../state/actions/selections/selectionsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.xInputRef = React.createRef();\n        this.yInputRef = React.createRef();\n\n\n        this.state = {\n            points: [],\n            newX: \"\",\n            newY: \"\",\n            errorMessage: \"\",\n            editMode: [],\n            type: \"Punktowy\",\n            xEditMode: false,\n            yEditMode: false\n        };\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    addPoint = () => {\n        const newPoint = {\n            id: uuid(),\n            x: this.state.newX,\n            y: this.state.newY\n        };\n\n        if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n            if (isNaN(newPoint.x)) {\n                this.setState({\n                    errorMessage: \"Wartość X nie jest liczbą\"\n                });\n                return;\n            }\n\n            if (isNaN(newPoint.y)) {\n                this.setState({\n                    errorMessage: \"Wartość Y nie jest liczbą\"\n                });\n                return;\n            }\n\n            let xValues = Object.values(this.props.points.points).filter(point => {\n                return point.x === newPoint.x;\n            })\n\n            if (Object.values(xValues).length > 0) {\n                this.setState({\n                    errorMessage: \"Taka wartość X już istnieje\"\n                });\n                return;\n            }\n\n\n            this.props.addPoint(newPoint);\n            this.setState({\n                errorMessage: \"\",\n                newX: \"\",\n                newY: \"\"\n            });\n\n            $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n        } else {\n            this.setState({\n                errorMessage: \"Obie wartości muszą być wypełnione\"\n            });\n        }\n    };\n\n    removePoint(id) {\n        this.props.removePoint(id);\n    }\n\n    editModeTurnOn(id) {\n        let editMode = this.state.editMode;\n        editMode.push(id);\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    editModeTurnOff(id) {\n        let newX = $(\"#x_\" + id).val();\n        let newY = $(\"#y_\" + id).val();\n\n        let edit = true;\n\n        if (newX === \"\" || newY === \"\") {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n            });\n            edit = false;\n        }\n        if (isNaN(newX) || isNaN(newY)) {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n            });\n            edit = false;\n        }\n\n        if (edit) this.props.editPoint(id, newX, newY);\n\n        let editMode = this.state.editMode;\n\n        editMode = editMode.filter(data => {\n            return data !== id;\n        });\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>\n                    <strong>Dane:</strong>\n                </h4>\n                <div className=\"list\" id=\"listDiv\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            {this.state.xEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.xInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.xLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setXLabel(this.xInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          xEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            xEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.xLabel}</th>\n                            }\n                            {this.state.yEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.yInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.yLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setYLabel(this.yInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          yEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            yEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.yLabel}</th>\n                            }\n                            <th>Akcje</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.values(this.props.points.points).map(point => (\n                            <tr key={uuid()}>\n                                {!this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">{point.x}</td>\n                                        <td className=\"valueWidth\">{point.y}</td>\n                                    </React.Fragment>\n                                )}\n                                {this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.x}\n                                                id={\"x_\" + point.id}\n                                            />\n                                        </td>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.y}\n                                                id={\"y_\" + point.id}\n                                            />\n                                        </td>\n                                    </React.Fragment>\n                                )}\n                                <td className=\"buttonsWidth\">\n                                    {this.state.editMode.includes(point.id) ? (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOff(point.id);\n                                            }}\n                                        >\n                                            Zapisz\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOn(point.id);\n                                            }}\n                                        >\n                                            Edytuj\n                                        </button>\n                                    )}\n                                    <button\n                                        className=\"btn btn-danger btn-small tableButton mx-3\"\n                                        onClick={() => {\n                                            this.removePoint(point.id);\n                                        }}\n                                    >\n                                        Usuń\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newX\"\n                                id=\"newX\"\n                                value={this.state.newX}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newY\"\n                                id=\"newY\"\n                                value={this.state.newY}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\">\n                            <button\n                                className=\"btn btn-primary btn-block btn-sm\"\n                                onClick={this.addPoint}\n                            >\n                                Dodaj\n                            </button>\n                        </td>\n                    </tr>\n                    {this.props.selections.helpVisible &&\n                    <tr>\n                        <td colSpan=\"3\">\n                            <span className=\"text-muted\">Przy tej wybranej rodzinie wykresów obie wprowadzane wartości muszą być wartościami numerycznymi</span>\n                        </td>\n                    </tr>\n                    }\n                    </tbody>\n                </table>\n                <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points,\n    selections: state.Selections.selections\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setXLabel,\n        setYLabel\n    }\n)(XYDataInput);\n","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport {\n    setNameLabel,\n    setValueLabel\n} from \"../../../state/actions/selections/selectionsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.nameInputRef = React.createRef();\n        this.valueInputRef = React.createRef();\n\n        this.state = {\n            points: [],\n            newName: \"\",\n            newValue: \"\",\n            errorMessage: \"\",\n            editMode: [],\n            type: \"Punktowy\",\n            nameEditMode: false,\n            valueEditMode: false\n        };\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    addPoint = () => {\n        const newRecord = {\n            id: uuid(),\n            name: this.state.newName,\n            value: this.state.newValue\n        };\n\n        if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n            if (isNaN(newRecord.value)) {\n                this.setState({\n                    errorMessage: \"Wartość Y nie jest liczbą\"\n                });\n                return;\n            }\n\n            let xValues = Object.values(this.props.points.points).filter(point => {\n                return point.x === newRecord.x;\n            });\n\n\n            this.props.addPoint(newRecord);\n            this.setState({\n                errorMessage: \"\",\n                newName: \"\",\n                newValue: \"\"\n            });\n\n            $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n        } else {\n            this.setState({\n                errorMessage: \"Obie wartości muszą być wypełnione\"\n            });\n        }\n    };\n\n    removePoint(id) {\n        this.props.removePoint(id);\n    }\n\n    editModeTurnOn(id) {\n        let editMode = this.state.editMode;\n        editMode.push(id);\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    editModeTurnOff(id) {\n        let newName = $(\"#x_\" + id).val();\n        let newValue = $(\"#y_\" + id).val();\n\n        let edit = true;\n\n        if (newName === \"\" || newValue === \"\") {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n            });\n            edit = false;\n        }\n        if (isNaN(newValue)) {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n            });\n            edit = false;\n        }\n\n        if (edit) this.props.editPoint(id, newName, newValue);\n\n        let editMode = this.state.editMode;\n\n        editMode = editMode.filter(data => {\n            return data !== id;\n        });\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>\n                    <strong>Dane:</strong>\n                </h4>\n                <div className=\"list\" id=\"listDiv\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            {this.state.nameEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.nameInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.nameLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setNameLabel(this.nameInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          nameEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            nameEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.nameLabel}</th>\n                            }\n                            {this.state.valueEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.valueInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.valueLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setValueLabel(this.valueInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          valueEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            valueEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.valueLabel}</th>\n                            }\n                            <th>Akcje</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.values(this.props.points.points).map(point => (\n                            <tr key={uuid()}>\n                                {!this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">{point.name}</td>\n                                        <td className=\"valueWidth\">{point.value}</td>\n                                    </React.Fragment>\n                                )}\n                                {this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.name}\n                                                id={\"x_\" + point.id}\n                                            />\n                                        </td>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.value}\n                                                id={\"y_\" + point.id}\n                                            />\n                                        </td>\n                                    </React.Fragment>\n                                )}\n                                <td className=\"buttonsWidth\">\n                                    {this.state.editMode.includes(point.id) ? (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOff(point.id);\n                                            }}\n                                        >\n                                            Zapisz\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOn(point.id);\n                                            }}\n                                        >\n                                            Edytuj\n                                        </button>\n                                    )}\n                                    <button\n                                        className=\"btn btn-danger btn-small tableButton mx-3\"\n                                        onClick={() => {\n                                            this.removePoint(point.id);\n                                        }}\n                                    >\n                                        Usuń\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <input\n                                className=\"form-input text-center newNameInput\"\n                                name=\"newName\"\n                                id=\"newName\"\n                                value={this.state.newName}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newValue\"\n                                id=\"newValue\"\n                                value={this.state.newValue}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\">\n                            <button\n                                className=\"btn btn-primary btn-block btn-sm\"\n                                onClick={this.addPoint}\n                            >\n                                Dodaj\n                            </button>\n                        </td>\n                    </tr>\n                    {this.props.selections.helpVisible &&\n                    <tr>\n                        <td colSpan=\"3\">\n                            <span className=\"text-muted\">Przy tej wybranej rodzinie wykresów pierwsza wartość może być dowolnym słowem (kategoria),\n                            a druga wartością numeryczną</span>\n                        </td>\n                    </tr>\n                    }\n                    </tbody>\n                </table>\n                <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    points: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setNameLabel,\n        setValueLabel\n    }\n)(NameAndValueDataInput);\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function PointsChart(props) {\n\n  return (\n    <React.Fragment>\n      <ScatterChart\n        width={760}\n        height={500}\n        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"x\" label={{value: props.xLabel, position: 'insideBottom', offset: 0}}/>\n        <YAxis type=\"number\" dataKey=\"y\" name=\"y\" label={{ value: props.yLabel, angle: -90, position: 'insideLeft' }} />\n\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          <Legend align=\"right\" verticalAlign=\"middle\"/>\n        <Scatter name=\"Dane\" data={props.points.points} fill={props.color} />\n      </ScatterChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function LinesChart(props) {\n  let data = [];\n\n  props.points.points.forEach(point => {\n    data.push({\n      x: point.x,\n      y: point.y\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <LineChart\n        width={760}\n        height={500}\n        data={data}\n        margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" type=\"number\" label={{value: props.xLabel, position: 'insideBottom', offset: 0}}/>\n        <YAxis label={{ value: props.yLabel, angle: -90, position: 'insideLeft' }}/>\n        <Tooltip />\n          <Legend align=\"right\" verticalAlign=\"middle\"/>\n        <Line type=\"monotone\" dataKey=\"y\" stroke={props.color} />\n      </LineChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function HorizontalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\" label={{value: props.nameLabel, position: 'insideBottom', offset: 0}}/>\n                <YAxis label={{ value: props.valueLabel, angle: -90, position: 'insideLeft' }}/>\n                <Tooltip/>\n                <Legend align=\"right\" verticalAlign=\"middle\"/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function VerticalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                layout=\"vertical\"\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis type=\"number\" label={{ value: props.valueLabel, position: 'insideBottom', offset: 0}}/>\n                <YAxis dataKey=\"name\" type=\"category\" label={{value: props.nameLabel, angle: -90, position: 'insideLeft'}}/>\n                <Tooltip/>\n                <Legend align=\"right\" verticalAlign=\"middle\"/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine,\n    Pie,\n    PieChart\n} from \"recharts\";\n\nexport default function CircleChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: Number(point.value)\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <PieChart width={760} height={500}>\n                <Pie isAnimationActive={true} data={data} cx={370} cy={250} outerRadius={200} fill={props.color} dataKey=\"value\" label={renderCustomizedLabel}/>\n            </PieChart>\n\n        </React.Fragment>\n    );\n}\n\n\nconst renderCustomizedLabel = (data) => {\n    console.log(data);\n    return data.name + \": \" + data.value;\n};","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {CirclePicker, GithubPicker, SketchPicker, ChromePicker} from 'react-color';\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport {setSelectedChartsFamily} from \"../../state/actions/selections/selectionsActions\"\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\n\nimport './MainPage.css'\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            displayColorPicker: false,\n            color: {\n                r: '66',\n                g: '134',\n                b: '244',\n                a: '1',\n            },\n            hexColor: '#4286f4',\n            labelXYX: \"X\",\n            labelXYY: \"Y\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\n    };\n\n    handleClose = (event) => {\n        console.log(event);\n        this.setState({displayColorPicker: false})\n    };\n\n    handleChange = (color) => {\n        console.log(color);\n        this.setState({\n            color: color.rgb,\n            hexColor: color.hex\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Liczbowe\");\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Tekstowe\");\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                {this.props.selections.helpVisible &&\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-6 center\">\n                        <span className=\"text-muted\">Wykresy liczbowe to wykres punktowy i liniowy.</span>\n                    </div>\n                    <div className=\"col-sm-6 center\">\n                         <span className=\"text-muted\">Wykresy tekstowe to wykresy kolumnowe (horyzontalne i wertykalne\n                        oraz wykres kołowy</span>\n                    </div>\n                </div>\n                }\n\n                <div className=\"row\">\n                    {this.props.selections.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.props.selections.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.props.selections.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            <div className=\"chartArea\">\n                                {\n                                    this.state.NumbersChartType === \"Punktowy\" && (\n                                        <PointsChart points={this.props.xypoints} color={this.state.hexColor} xLabel={this.props.selections.xLabel} yLabel={this.props.selections.yLabel}/>\n                                    )\n                                }\n                                {this.state.NumbersChartType === \"Liniowy\" && (\n                                    <LinesChart points={this.props.xypoints} color={this.state.hexColor} xLabel={this.props.selections.xLabel} yLabel={this.props.selections.yLabel}/>\n                                )\n                                }\n                            </div>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.props.selections.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            <div className=\"chartArea\">\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints} color={this.state.hexColor} nameLabel={this.props.selections.nameLabel} valueLabel={this.props.selections.valueLabel}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints} color={this.state.hexColor} nameLabel={this.props.selections.nameLabel} valueLabel={this.props.selections.valueLabel}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"Kolowy\" && (\n                                    <CircleChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            </div>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"Kolowy\"\n                                    });\n                                }}\n                            >\n                                Kołowy\n                            </button>\n                        </React.Fragment>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <CirclePicker className=\"colorPicker\"\n                                              color={this.state.color}\n                                              onChange={this.handleChange}/>\n\n                            </div>\n                        </div>\n                        {this.props.selections.helpVisible &&\n                        <div className=\"row mt-2\">\n                            <div className=\"col-sm-12 mx-auto\">\n                                <span className=\"text-muted\">Wybrany tutaj kolor będzie ustawiony dla wszystkich typów wykresów</span>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setSelectedChartsFamily\n    }\n)(MainPage);\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}