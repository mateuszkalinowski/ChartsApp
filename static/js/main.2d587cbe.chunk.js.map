{"version":3,"sources":["state/actions/points/pointsReducers.js","state/rootReducer.js","state/types.js","store.js","views/components/Header.js","views/pages/MainPage.js","state/actions/points/pointsActions.js","Routes.js","App.js","index.js"],"names":["initialState","points","appReducer","combineReducers","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Header","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","MainPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","addPoint","newPoint","uuid","isNaN","errorMessage","$","scrollTop","scrollHeight","editMode","removePoint","val","edit","editPoint","data","_this2","values","map","key","includes","Fragment","defaultValue","onClick","editModeTurnOff","editModeTurnOn","colSpan","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","cursor","Legend","Scatter","fill","LineChart","Line","stroke","connect","dispatch","Routes","HashRouter","basename","process","Header_Header","Switch","Route","path","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2d587cbe.chunk.js","sourcesContent":["import {ADD_POINT, REMOVE_POINT, EDIT_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function(a,b) {\n                return a.x - b.x;\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        case REMOVE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        case EDIT_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if(point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\n\nimport pointsReducer from \"./actions/points/pointsReducers\";\n\nconst appReducer = combineReducers({\n  points: pointsReducer\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_POINT = 'ADD_POINT';\nexport const REMOVE_POINT = 'REMOVE_POINT';\nexport const EDIT_POINT = 'EDIT_POINT';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"container\">\n            <a className=\"navbar-brand\" href=\"/ChartsApp\">\n              ChartsApp\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNav\"\n              aria-controls=\"navbarNav\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                {/* <li class=\"nav-item dropdown\">\n                    <a class=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Plik\n                    </a>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a class=\"dropdown-item\" href=\"#\">Nowy</a>\n                    <a class=\"dropdown-item\" href=\"#\"></a>\n                    <a class=\"dropdown-item\" href=\"#\"></a>\n                    </div>\n                </li>\n                <li class=\"nav-item active\">\n                  <a class=\"nav-link\" href=\"#\">\n                    Edycja\n                  </a>\n                </li>\n                <li class=\"nav-item active\">\n                  <a class=\"nav-link\" href=\"#\">\n                    Widok\n                  </a>\n                </li> */}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addPoint,\n  removePoint,\n  editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./MainPage.css\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ZAxis,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart,\n  PieChart,\n  Pie\n} from \"recharts\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      points: [],\n      newX: \"\",\n      newY: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\"\n    };\n  }\n\n  componentDidMount() {}\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  addPoint = () => {\n    const newPoint = {\n      id: uuid(),\n      x: this.state.newX,\n      y: this.state.newY\n    };\n\n    if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n      if (isNaN(newPoint.x)) {\n        this.setState({\n          errorMessage: \"Wartość X nie jest liczbą\"\n        });\n        return;\n      }\n\n      if (isNaN(newPoint.y)) {\n        this.setState({\n          errorMessage: \"Wartość Y nie jest liczbą\"\n        });\n        return;\n      }\n\n      this.props.addPoint(newPoint);\n      this.setState({\n        errorMessage: \"\",\n        newX: \"\",\n        newY: \"\"\n      });\n\n      $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n    } else {\n      this.setState({\n        errorMessage: \"Obie wartości muszą być wypełnione\"\n      });\n    }\n  };\n\n  removePoint(id) {\n    this.props.removePoint(id);\n  }\n\n  editModeTurnOn(id) {\n    let editMode = this.state.editMode;\n    editMode.push(id);\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  editModeTurnOff(id) {\n    let newX = $(\"#x_\" + id).val();\n    let newY = $(\"#y_\" + id).val();\n\n    let edit = true;\n\n    if (newX === \"\" || newY === \"\") {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n      });\n      edit = false;\n    }\n    if (isNaN(newX) || isNaN(newY)) {\n      this.setState({\n        errorMessage:\n          \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n      });\n      edit = false;\n    }\n\n    if (edit) this.props.editPoint(id, newX, newY);\n\n    let editMode = this.state.editMode;\n\n    editMode = editMode.filter(data => {\n      return data !== id;\n    });\n    this.setState({\n      editMode: editMode\n    });\n  }\n\n  render() {\n    let data = [];\n\n    this.props.points.points.forEach(point => {\n      data.push({\n        x: point.x,\n        y: point.y\n      });\n    });\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <h4>\n              <strong>Dane:</strong>\n            </h4>\n            <div className=\"list\" id=\"listDiv\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th className=\"valueWidth\">X</th>\n                    <th className=\"valueWidth\">Y</th>\n                    <th>Akcje</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.values(this.props.points.points).map(point => (\n                    <tr key={uuid()}>\n                      {!this.state.editMode.includes(point.id) && (\n                        <React.Fragment>\n                          <td className=\"valueWidth\">{point.x}</td>\n                          <td className=\"valueWidth\">{point.y}</td>\n                        </React.Fragment>\n                      )}\n                      {this.state.editMode.includes(point.id) && (\n                        <React.Fragment>\n                          <td className=\"valueWidth\">\n                            <input\n                              className=\"newValueInput text-center\"\n                              defaultValue={point.x}\n                              id={\"x_\" + point.id}\n                            />\n                          </td>\n                          <td className=\"valueWidth\">\n                            <input\n                              className=\"newValueInput text-center\"\n                              defaultValue={point.y}\n                              id={\"y_\" + point.id}\n                            />\n                          </td>\n                        </React.Fragment>\n                      )}\n                      <td className=\"buttonsWidth\">\n                        {this.state.editMode.includes(point.id) ? (\n                          <button\n                            className=\"btn btn-success btn-small tableButton mx-3\"\n                            onClick={() => {\n                              this.editModeTurnOff(point.id);\n                            }}\n                          >\n                            Zapisz\n                          </button>\n                        ) : (\n                          <button\n                            className=\"btn btn-success btn-small tableButton mx-3\"\n                            onClick={() => {\n                              this.editModeTurnOn(point.id);\n                            }}\n                          >\n                            Edytuj\n                          </button>\n                        )}\n                        <button\n                          className=\"btn btn-danger btn-small tableButton mx-3\"\n                          onClick={() => {\n                            this.removePoint(point.id);\n                          }}\n                        >\n                          Usuń\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th />\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <input\n                      className=\"form-input text-center newValueInput\"\n                      name=\"newX\"\n                      id=\"newX\"\n                      value={this.state.newX}\n                      onChange={this.onChange}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"form-input text-center newValueInput\"\n                      name=\"newY\"\n                      id=\"newY\"\n                      value={this.state.newY}\n                      onChange={this.onChange}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td colSpan=\"3\">\n                    <button\n                      className=\"btn btn-primary btn-block btn-sm\"\n                      onClick={this.addPoint}\n                    >\n                      Dodaj\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n          </div>\n          <div className=\"col-sm-8\">\n            <h4>\n              <strong>Wykres:</strong>\n            </h4>\n            {this.state.type === \"Punktowy\" && (\n              <ScatterChart\n                width={760}\n                height={500}\n                margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis type=\"number\" dataKey=\"x\" name=\"x\" />\n                <YAxis type=\"number\" dataKey=\"y\" name=\"y\" />\n\n                <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n                <Legend />\n                <Scatter\n                  name=\"Dane\"\n                  data={this.props.points.points}\n                  fill=\"#8884d8\"\n                />\n              </ScatterChart>\n            )}\n            {this.state.type === \"Liniowy\" && (\n              <LineChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"x\" type=\"number\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" />\n              </LineChart>\n            )}\n            <button\n              className=\"btn btn-info mx-4\"\n              onClick={() => {\n                this.setState({\n                  type: \"Punktowy\"\n                });\n              }}\n            >\n              Punktowy\n            </button>\n            <button\n              className=\"btn btn-info mx-4\"\n              onClick={() => {\n                this.setState({\n                  type: \"Liniowy\"\n                });\n              }}\n            >\n              Liniowy\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  points: state.points.points\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addPoint,\n    removePoint,\n    editPoint\n  }\n)(MainPage);\n","import {ADD_POINT, REMOVE_POINT, EDIT_POINT} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_POINT,\n        payload: point\n    })\n}\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_POINT,\n        payload: id\n    })\n}\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n}","import React, { Component } from 'react'\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router basename={process.env.PUBLIC_URL}>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route path=\"/\" component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}