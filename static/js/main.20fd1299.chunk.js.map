{"version":3,"sources":["state/actions/points/pointsReducers.js","state/actions/nameAndValuePoints/nameAndValuePointsReducer.js","state/actions/selections/selectionsReducer.js","state/rootReducer.js","state/types.js","store.js","state/actions/points/pointsActions.js","state/actions/nameAndValuePoints/nameAndValuePointsActions.js","state/actions/selections/selectionsActions.js","views/components/Header.js","views/components/dataInputs/XYDataInput.js","views/components/dataInputs/NameAndValueDataInput.js","views/components/charts/PointsChart.js","views/components/charts/LinesChart.js","views/components/charts/HorizontalBarChart.js","views/components/charts/VerticalBarChart.js","views/components/charts/CircleChart.js","views/pages/MainPage.js","Routes.js","App.js","index.js"],"names":["initialState","points","selections","family","xLabel","yLabel","nameLabel","valueLabel","appReducer","combineReducers","XandYPoints","state","arguments","length","undefined","action","type","push","payload","sort","a","b","x","Object","objectSpread","filter","point","id","forEach","newX","y","newY","NameAndValuePoints","name","value","Selections","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","apply","addPoint","dispatch","removePoint","editPoint","setXLabel","newLabel","setYLabel","setNameLabel","setValueLabel","Header","csvXYFileAdded","data","_this","props","removeAllXYPoints","item","index","newPoint","uuid","isNaN","this","addXYPoint","bind","assertThisInitialized","csvNameValueFileAdded","removeAllNameAndValuePoints","addNameValuePoint","_this2","csvXYData","xypoints","csvNameValueData","nvpoints","_csvNameValueData$pus","defineProperty","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_csv","filename","react_csv_reader_default","cssClass","label","onFileLoaded","onError","handleDarkSideForce","inputId","inputStyle","color","onClick","Component","connect","XYDataInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","target","errorMessage","xValues","values","$","scrollTop","scrollHeight","xInputRef","React","createRef","yInputRef","editMode","xEditMode","yEditMode","val","edit","ref","autoFocus","defaultValue","onBlur","current","map","key","includes","Fragment","editModeTurnOff","editModeTurnOn","colSpan","NameAndValueDataInput","newRecord","newName","newValue","nameInputRef","valueInputRef","nameEditMode","valueEditMode","PointsChart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","position","offset","YAxis","angle","Tooltip","cursor","Legend","align","verticalAlign","Scatter","fill","LinesChart","LineChart","Line","stroke","HorizontalBarChart","BarChart","barSize","ReferenceLine","Bar","VerticalBarChart","layout","CircleChart","Number","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","renderCustomizedLabel","console","log","MainPage","handleClick","displayColorPicker","handleClose","event","handleChange","rgb","hexColor","hex","NumbersChartType","TextChartType","r","g","labelXYX","labelXYY","setSelectedChartsFamily","components_dataInputs_XYDataInput","components_dataInputs_NameAndValueDataInput","lib","Routes","BrowserRouter","components_Header","Switch","Route","component","App","react_redux_es","Routes_Routes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.20fd1299.chunk.js","sourcesContent":["import {\n    ADD_XY_POINT,\n    REMOVE_XY_POINT,\n    EDIT_XY_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT,\n    REMOVE_ALL_XY_POINTS\n} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function (a, b) {\n                return a.x - b.x;\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_XY_POINTS:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {ADD_NAMEANDVALUE_POINT, REMOVE_NAMEANDVALUE_POINT, EDIT_NAMEANDVALUE_POINT, REMOVE_ALL_NAMEANDVALUE_POINT} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_NAMEANDVALUE_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            // points.sort(function(a,b) {\n            //     return a.x - b.x;\n            // })\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_NAMEANDVALUE_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.name = action.payload.newX;\n                    point.value = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_NAMEANDVALUE_POINT:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}","import {\n   SET_SELECTED_CHARTS_FAMILY,\n    SET_X_LABEL,\n    SET_Y_LABEL,\n    SET_NAME_LABEL,\n    SET_VALUE_LABEL\n} from \"../../types\";\n\nconst initialState = {\n    selections: {\n        family: 'Liczbowe',\n        xLabel: 'X',\n        yLabel: 'Y',\n        nameLabel: 'Nazwa',\n        valueLabel: 'Wartość'\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_SELECTED_CHARTS_FAMILY:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    family: action.payload\n                }\n            };\n        case SET_X_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    xLabel: action.payload\n                }\n            };\n        case SET_Y_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    yLabel: action.payload\n                }\n            };\n        case SET_NAME_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    nameLabel: action.payload\n                }\n            };\n        case SET_VALUE_LABEL:\n            return {\n                ...state,\n                selections: {\n                    ...state.selections,\n                    valueLabel: action.payload\n                }\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport XandYPointsReducer from \"./actions/points/pointsReducers\";\nimport NameAndValueReducer from \"./actions/nameAndValuePoints/nameAndValuePointsReducer\";\nimport SelectionsReducer from \"./actions/selections/selectionsReducer\";\n\nconst appReducer = combineReducers({\n    XandYPoints: XandYPointsReducer,\n    NameAndValuePoints: NameAndValueReducer,\n    Selections: SelectionsReducer\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","export const ADD_XY_POINT = 'ADD_XY_POINT';\nexport const REMOVE_XY_POINT = 'REMOVE_XY_POINT';\nexport const EDIT_XY_POINT = 'EDIT_XY_POINT';\nexport const REMOVE_ALL_XY_POINTS = 'REMOVE_ALL_XY_POINTS';\n\nexport const ADD_NAMEANDVALUE_POINT = 'ADD_NAMEANDVALUE_POINT';\nexport const REMOVE_NAMEANDVALUE_POINT = 'REMOVE_NAMEANDVALUE_POINT';\nexport const EDIT_NAMEANDVALUE_POINT = 'EDIT_NAMEANDVALUE_OINT';\nexport const REMOVE_ALL_NAMEANDVALUE_POINT =  'REMOVE_ALL_NAMEANDVALUE_POINT';\n\nexport const ADD_PAIR = 'ADD_PAIR';\nexport const REMOVE_PAIR = 'REMOVE_PAIR';\nexport const EDIT_PAIR = 'EDIT_PAIR';\n\nexport const SET_SELECTED_CHARTS_FAMILY = 'SET_SELECTED_CHARTS_FAMILY';\n\nexport const SET_X_LABEL = 'SET_X_LABEL';\nexport const SET_Y_LABEL = 'SET_Y_LABEL';\nexport const SET_NAME_LABEL = 'SET_NAME_LABEL';\nexport const SET_VALUE_LABEL = 'SET_VALUE_LABEL';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\nexport default store;\n","import {ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT, REMOVE_ALL_XY_POINTS} from '../../types';\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_XY_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_XY_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_XY_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllXYPoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_XY_POINTS,\n        payload: {}\n    })\n};","import {\n    ADD_NAMEANDVALUE_POINT,\n    REMOVE_NAMEANDVALUE_POINT,\n    EDIT_NAMEANDVALUE_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT\n} from \"../../types\";\n\nexport const addPoint = (point) => dispatch => {\n    dispatch({\n        type: ADD_NAMEANDVALUE_POINT,\n        payload: point\n    })\n};\n\nexport const removePoint = (id) => dispatch => {\n    dispatch({\n        type: REMOVE_NAMEANDVALUE_POINT,\n        payload: id\n    })\n};\n\nexport const editPoint = (id,newX,newY) => dispatch => {\n    dispatch({\n        type: EDIT_NAMEANDVALUE_POINT,\n        payload: {\n            id,\n            newX,\n            newY\n        }\n    })\n};\n\nexport const removeAllNameAndValuePoints = () => dispatch => {\n    dispatch({\n        type: REMOVE_ALL_NAMEANDVALUE_POINT,\n        payload: {}\n    })\n};","import {SET_SELECTED_CHARTS_FAMILY, SET_X_LABEL, SET_Y_LABEL, SET_NAME_LABEL, SET_VALUE_LABEL} from '../../types';\n\nexport const setSelectedChartsFamily = (family) => dispatch => {\n    dispatch({\n        type: SET_SELECTED_CHARTS_FAMILY,\n        payload: family\n    })\n};\n\nexport const setXLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_X_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setYLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_Y_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setNameLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_NAME_LABEL,\n        payload: newLabel\n    })\n};\n\nexport const setValueLabel = (newLabel) => dispatch => {\n    dispatch({\n        type: SET_VALUE_LABEL,\n        payload: newLabel\n    })\n};","import React, {Component} from \"react\";\nimport {CSVLink} from \"react-csv\";\nimport {connect} from \"react-redux\";\nimport CSVReader from 'react-csv-reader'\n\nimport {\n    addPoint as addXYPoint,\n    removeAllXYPoints\n} from \"../../state/actions/points/pointsActions\";\n\nimport {\n    addPoint as addNameValuePoint,\n    removeAllNameAndValuePoints\n} from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport {\n    setXLabel,\n    setYLabel,\n    setNameLabel,\n    setValueLabel\n} from \"../../state/actions/selections/selectionsActions\";\nimport uuid from \"uuid\";\n\nclass Header extends Component {\n\n\n    csvXYFileAdded = (data) => {\n\n        this.props.removeAllXYPoints();\n\n        data.forEach(function (item, index) {\n            if (index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    x: item[0],\n                    y: item[1]\n                };\n\n                if (!isNaN(newPoint.x) && !isNaN(newPoint.y)) {\n                    this.props.addXYPoint(newPoint);\n                }\n            } else {\n                this.props.setXLabel(item[0]);\n                this.props.setYLabel(item[1]);\n            }\n        }.bind(this));\n    };\n\n    csvNameValueFileAdded = (data) => {\n\n        this.props.removeAllNameAndValuePoints();\n\n        data.forEach(function (item, index) {\n            if (index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    name: item[0],\n                    value: item[1]\n                };\n\n                if (!isNaN(newPoint.value)) {\n                    this.props.addNameValuePoint(newPoint);\n                }\n            } else {\n                this.props.setNameLabel(item[0]);\n                this.props.setValueLabel(item[1]);\n            }\n        }.bind(this));\n\n    }\n\n    render() {\n        let csvXYData = [];\n        this.props.xypoints.points.forEach(point => {\n            csvXYData.push({\n                x: point.x,\n                y: point.y\n            });\n        });\n        let csvNameValueData = [];\n        this.props.nvpoints.points.forEach(point => {\n            csvNameValueData.push({\n                [this.props.selections.nameLabel]: point.name,\n                [this.props.selections.valueLabel]: point.value\n            });\n        });\n\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            ChartsApp\n                        </a>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\"\n                                       role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Plik\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                        <CSVLink data={csvXYData} filename={\"numericData.csv\"}\n                                                 className=\"dropdown-item text-dark\">Pobierz dane liczbowe jako plik\n                                            CSV</CSVLink>\n                                        <CSVLink data={csvNameValueData} filename={\"textData.csv\"}\n                                                 className=\"dropdown-item text-dark\">Pobierz dane tekstowe jako plik\n                                            CSV</CSVLink>\n                                        <div className=\"dropdown-divider\"></div>\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane liczbowe z pliku CSV\"\n                                            onFileLoaded={this.csvXYFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane tekstowe z pliku CSV\"\n                                            onFileLoaded={this.csvNameValueFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                    </div>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"editNavbarMenuLink\"\n                                       role=\"button\"\n                                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Edycja\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"editNavbarMenuLink\">\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllXYPoints();\n                                           }}\n                                        >Usuń wszystkie dane liczbowe</a>\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllNameAndValuePoints();\n                                           }}\n                                        >Usuń wszystkie dane tekstowe</a>\n                                    </div>\n                                </li>\n\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych liczbowych*/}\n                                {/*</a>*/}\n                                {/*</li>*/}\n                                {/*<li class=\"nav-item active\">*/}\n                                {/*<a class=\"nav-link\" href=\"#\">*/}\n                                {/*Wykresy danych tekstowych*/}\n                                {/*</a>*/}\n                                {/*</li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\n\nexport default connect(mapStateToProps, {\n    addXYPoint,\n    addNameValuePoint,\n    removeAllXYPoints,\n    removeAllNameAndValuePoints,\n    setXLabel,\n    setYLabel,\n    setNameLabel,\n    setValueLabel\n})(Header);","import React, {Component} from \"react\";\n\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\n\nimport {\n    setXLabel,\n    setYLabel\n} from \"../../../state/actions/selections/selectionsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.xInputRef = React.createRef();\n        this.yInputRef = React.createRef();\n\n\n        this.state = {\n            points: [],\n            newX: \"\",\n            newY: \"\",\n            errorMessage: \"\",\n            editMode: [],\n            type: \"Punktowy\",\n            xEditMode: false,\n            yEditMode: false\n        };\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    addPoint = () => {\n        const newPoint = {\n            id: uuid(),\n            x: this.state.newX,\n            y: this.state.newY\n        };\n\n        if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n            if (isNaN(newPoint.x)) {\n                this.setState({\n                    errorMessage: \"Wartość X nie jest liczbą\"\n                });\n                return;\n            }\n\n            if (isNaN(newPoint.y)) {\n                this.setState({\n                    errorMessage: \"Wartość Y nie jest liczbą\"\n                });\n                return;\n            }\n\n            let xValues = Object.values(this.props.points.points).filter(point => {\n                return point.x === newPoint.x;\n            })\n\n            if (Object.values(xValues).length > 0) {\n                this.setState({\n                    errorMessage: \"Taka wartość X już istnieje\"\n                });\n                return;\n            }\n\n\n            this.props.addPoint(newPoint);\n            this.setState({\n                errorMessage: \"\",\n                newX: \"\",\n                newY: \"\"\n            });\n\n            $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n        } else {\n            this.setState({\n                errorMessage: \"Obie wartości muszą być wypełnione\"\n            });\n        }\n    };\n\n    removePoint(id) {\n        this.props.removePoint(id);\n    }\n\n    editModeTurnOn(id) {\n        let editMode = this.state.editMode;\n        editMode.push(id);\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    editModeTurnOff(id) {\n        let newX = $(\"#x_\" + id).val();\n        let newY = $(\"#y_\" + id).val();\n\n        let edit = true;\n\n        if (newX === \"\" || newY === \"\") {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n            });\n            edit = false;\n        }\n        if (isNaN(newX) || isNaN(newY)) {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n            });\n            edit = false;\n        }\n\n        if (edit) this.props.editPoint(id, newX, newY);\n\n        let editMode = this.state.editMode;\n\n        editMode = editMode.filter(data => {\n            return data !== id;\n        });\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>\n                    <strong>Dane:</strong>\n                </h4>\n                <div className=\"list\" id=\"listDiv\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            {this.state.xEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.xInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.xLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setXLabel(this.xInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          xEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            xEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.xLabel}</th>\n                            }\n                            {this.state.yEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.yInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.yLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setYLabel(this.yInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          yEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            yEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.yLabel}</th>\n                            }\n                            <th>Akcje</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.values(this.props.points.points).map(point => (\n                            <tr key={uuid()}>\n                                {!this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">{point.x}</td>\n                                        <td className=\"valueWidth\">{point.y}</td>\n                                    </React.Fragment>\n                                )}\n                                {this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.x}\n                                                id={\"x_\" + point.id}\n                                            />\n                                        </td>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.y}\n                                                id={\"y_\" + point.id}\n                                            />\n                                        </td>\n                                    </React.Fragment>\n                                )}\n                                <td className=\"buttonsWidth\">\n                                    {this.state.editMode.includes(point.id) ? (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOff(point.id);\n                                            }}\n                                        >\n                                            Zapisz\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOn(point.id);\n                                            }}\n                                        >\n                                            Edytuj\n                                        </button>\n                                    )}\n                                    <button\n                                        className=\"btn btn-danger btn-small tableButton mx-3\"\n                                        onClick={() => {\n                                            this.removePoint(point.id);\n                                        }}\n                                    >\n                                        Usuń\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newX\"\n                                id=\"newX\"\n                                value={this.state.newX}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newY\"\n                                id=\"newY\"\n                                value={this.state.newY}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\">\n                            <button\n                                className=\"btn btn-primary btn-block btn-sm\"\n                                onClick={this.addPoint}\n                            >\n                                Dodaj\n                            </button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points,\n    selections: state.Selections.selections\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setXLabel,\n        setYLabel\n    }\n)(XYDataInput);\n","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport {\n    setNameLabel,\n    setValueLabel\n} from \"../../../state/actions/selections/selectionsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.nameInputRef = React.createRef();\n        this.valueInputRef = React.createRef();\n\n        this.state = {\n            points: [],\n            newName: \"\",\n            newValue: \"\",\n            errorMessage: \"\",\n            editMode: [],\n            type: \"Punktowy\",\n            nameEditMode: false,\n            valueEditMode: false\n        };\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    addPoint = () => {\n        const newRecord = {\n            id: uuid(),\n            name: this.state.newName,\n            value: this.state.newValue\n        };\n\n        if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n            if (isNaN(newRecord.value)) {\n                this.setState({\n                    errorMessage: \"Wartość Y nie jest liczbą\"\n                });\n                return;\n            }\n\n            let xValues = Object.values(this.props.points.points).filter(point => {\n                return point.x === newRecord.x;\n            });\n\n\n            this.props.addPoint(newRecord);\n            this.setState({\n                errorMessage: \"\",\n                newName: \"\",\n                newValue: \"\"\n            });\n\n            $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n        } else {\n            this.setState({\n                errorMessage: \"Obie wartości muszą być wypełnione\"\n            });\n        }\n    };\n\n    removePoint(id) {\n        this.props.removePoint(id);\n    }\n\n    editModeTurnOn(id) {\n        let editMode = this.state.editMode;\n        editMode.push(id);\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    editModeTurnOff(id) {\n        let newName = $(\"#x_\" + id).val();\n        let newValue = $(\"#y_\" + id).val();\n\n        let edit = true;\n\n        if (newName === \"\" || newValue === \"\") {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n            });\n            edit = false;\n        }\n        if (isNaN(newValue)) {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n            });\n            edit = false;\n        }\n\n        if (edit) this.props.editPoint(id, newName, newValue);\n\n        let editMode = this.state.editMode;\n\n        editMode = editMode.filter(data => {\n            return data !== id;\n        });\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>\n                    <strong>Dane:</strong>\n                </h4>\n                <div className=\"list\" id=\"listDiv\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            {this.state.nameEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.nameInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.nameLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setNameLabel(this.nameInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          nameEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            nameEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.nameLabel}</th>\n                            }\n                            {this.state.valueEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.valueInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.valueLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setValueLabel(this.valueInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          valueEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            valueEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.valueLabel}</th>\n                            }\n                            <th>Akcje</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.values(this.props.points.points).map(point => (\n                            <tr key={uuid()}>\n                                {!this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">{point.name}</td>\n                                        <td className=\"valueWidth\">{point.value}</td>\n                                    </React.Fragment>\n                                )}\n                                {this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.name}\n                                                id={\"x_\" + point.id}\n                                            />\n                                        </td>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.value}\n                                                id={\"y_\" + point.id}\n                                            />\n                                        </td>\n                                    </React.Fragment>\n                                )}\n                                <td className=\"buttonsWidth\">\n                                    {this.state.editMode.includes(point.id) ? (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOff(point.id);\n                                            }}\n                                        >\n                                            Zapisz\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOn(point.id);\n                                            }}\n                                        >\n                                            Edytuj\n                                        </button>\n                                    )}\n                                    <button\n                                        className=\"btn btn-danger btn-small tableButton mx-3\"\n                                        onClick={() => {\n                                            this.removePoint(point.id);\n                                        }}\n                                    >\n                                        Usuń\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <input\n                                className=\"form-input text-center newNameInput\"\n                                name=\"newName\"\n                                id=\"newName\"\n                                value={this.state.newName}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newValue\"\n                                id=\"newValue\"\n                                value={this.state.newValue}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\">\n                            <button\n                                className=\"btn btn-primary btn-block btn-sm\"\n                                onClick={this.addPoint}\n                            >\n                                Dodaj\n                            </button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    points: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setNameLabel,\n        setValueLabel\n    }\n)(NameAndValueDataInput);\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function PointsChart(props) {\n\n  return (\n    <React.Fragment>\n      <ScatterChart\n        width={760}\n        height={500}\n        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"x\" label={{value: props.xLabel, position: 'insideBottom', offset: 0}}/>\n        <YAxis type=\"number\" dataKey=\"y\" name=\"y\" label={{ value: props.yLabel, angle: -90, position: 'insideLeft' }} />\n\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          <Legend align=\"right\" verticalAlign=\"middle\"/>\n        <Scatter name=\"Dane\" data={props.points.points} fill={props.color} />\n      </ScatterChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\nexport default function LinesChart(props) {\n  let data = [];\n\n  props.points.points.forEach(point => {\n    data.push({\n      x: point.x,\n      y: point.y\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <LineChart\n        width={760}\n        height={500}\n        data={data}\n        margin={{ top: 20, right: 20, left: 10, bottom: 10 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"x\" type=\"number\" label={{value: props.xLabel, position: 'insideBottom', offset: 0}}/>\n        <YAxis label={{ value: props.yLabel, angle: -90, position: 'insideLeft' }}/>\n        <Tooltip />\n          <Legend align=\"right\" verticalAlign=\"middle\"/>\n        <Line type=\"monotone\" dataKey=\"y\" stroke={props.color} />\n      </LineChart>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function HorizontalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\" label={{value: props.nameLabel, position: 'insideBottom', offset: 0}}/>\n                <YAxis label={{ value: props.valueLabel, angle: -90, position: 'insideLeft' }}/>\n                <Tooltip/>\n                <Legend align=\"right\" verticalAlign=\"middle\"/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine\n} from \"recharts\";\n\nexport default function VerticalBarChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: point.value\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <BarChart\n                width={760}\n                height={500}\n                data={data}\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                layout=\"vertical\"\n                barSize={20}>\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis type=\"number\" label={{ value: props.valueLabel, position: 'insideBottom', offset: 0}}/>\n                <YAxis dataKey=\"name\" type=\"category\" label={{value: props.nameLabel, angle: -90, position: 'insideLeft'}}/>\n                <Tooltip/>\n                <Legend align=\"right\" verticalAlign=\"middle\"/>\n                <ReferenceLine y={0} stroke='#000'/>\n                <Bar dataKey=\"value\" name=\"Dane\" fill={props.color}/>\n            </BarChart>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nimport {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Line,\n    LineChart,\n    BarChart,\n    Bar,\n    ReferenceLine,\n    Pie,\n    PieChart\n} from \"recharts\";\n\nexport default function CircleChart(props) {\n\n    let data = [];\n\n    props.points.points.forEach(point => {\n        data.push({\n            name: point.name,\n            value: Number(point.value)\n        });\n    });\n\n    return (\n        <React.Fragment>\n            <PieChart width={760} height={500}>\n                <Pie isAnimationActive={true} data={data} cx={370} cy={250} outerRadius={200} fill={props.color} dataKey=\"value\" label={renderCustomizedLabel}/>\n            </PieChart>\n\n        </React.Fragment>\n    );\n}\n\n\nconst renderCustomizedLabel = (data) => {\n    console.log(data);\n    return data.name + \": \" + data.value;\n};","import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {CirclePicker, GithubPicker, SketchPicker, ChromePicker} from 'react-color';\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport {setSelectedChartsFamily} from \"../../state/actions/selections/selectionsActions\"\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\n\nimport './MainPage.css'\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            displayColorPicker: false,\n            color: {\n                r: '66',\n                g: '134',\n                b: '244',\n                a: '1',\n            },\n            hexColor: '#4286f4',\n            labelXYX: \"X\",\n            labelXYY: \"Y\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\n    };\n\n    handleClose = (event) => {\n        console.log(event);\n        this.setState({displayColorPicker: false})\n    };\n\n    handleChange = (color) => {\n        console.log(color);\n        this.setState({\n            color: color.rgb,\n            hexColor: color.hex\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Liczbowe\");\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Tekstowe\");\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.props.selections.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.props.selections.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.props.selections.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            <div className=\"chartArea\">\n                                {\n                                    this.state.NumbersChartType === \"Punktowy\" && (\n                                        <PointsChart points={this.props.xypoints} color={this.state.hexColor} xLabel={this.props.selections.xLabel} yLabel={this.props.selections.yLabel}/>\n                                    )\n                                }\n                                {this.state.NumbersChartType === \"Liniowy\" && (\n                                    <LinesChart points={this.props.xypoints} color={this.state.hexColor} xLabel={this.props.selections.xLabel} yLabel={this.props.selections.yLabel}/>\n                                )\n                                }\n                            </div>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.props.selections.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            <div className=\"chartArea\">\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints} color={this.state.hexColor} nameLabel={this.props.selections.nameLabel} valueLabel={this.props.selections.valueLabel}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints} color={this.state.hexColor} nameLabel={this.props.selections.nameLabel} valueLabel={this.props.selections.valueLabel}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"Kolowy\" && (\n                                    <CircleChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            </div>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"Kolowy\"\n                                    });\n                                }}\n                            >\n                                Kołowy\n                            </button>\n                        </React.Fragment>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <CirclePicker className=\"colorPicker\"\n                                              color={this.state.color}\n                                              onChange={this.handleChange}/>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setSelectedChartsFamily\n    }\n)(MainPage);\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './views/components/Header';\n\nimport MainPage from \"./views/pages/MainPage\"\n\nexport default class Routes extends Component {\n\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <React.Fragment>\n          <Router>\n            <div className=\"app\">\n              <Header/>\n              <Switch>\n                <Route component={MainPage}/>\n              </Switch>\n            </div>\n            </Router>  \n        </React.Fragment>        \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport store from './store';\nimport Routes from './Routes.js';\n\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routes/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}